{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Push your Django Apps to Heroku \u00b6 Mohsin Mahmood edited this page on May 22, 2019 Heroku is a cloud application platform, it is a PaaS (Platform-as-a-service) service. It allows you to deploy your web application from your localhost to cloud so that your application could be commercialized and could get production ready. 1. Preparing your application \u00b6 Copy the Project folder separately for deployment. 2. Initialize Git Repositor \u00b6 Install Git Press WIN + R Type cmd and click OK Navigate to project folder Make sure your are in the directory where the manage.py exists 1 2 3 4 git config --global user.name \"Your Name\" git config --global user.email \"you@youraddress.com\" git config --global user.email \"you@youraddress.com\" git init 3. Add Files To Git \u00b6 1 2 3 git add --all git commit -m \"Commit Message\" git push 4. Activate Virtual Environment \u00b6 Activating virtual environment. 1 2 3 4 manage.py # The configuration file. venv/ Scripts/ activate Run these command to activate the environment. 1 2 cd venv/Scripts/ activate If virtual environment not already exists. Run these commands on command prompt. 1 pip install virtualenv Install all the required libraries that your project required via pip command. Plus install the following dependencies in your virtual environment. 1 2 3 pip install gunicorn pip install django-heroku pip install python-decouple django-heroku: official package by Heroku which made our deployment simple. 5 Modify Setting.py file \u00b6 Now, In app/settings.py file add below content 1 2 3 4 #import os import django_heroku from decouple import config import dj_database_url At the end of the setting.py file add this line also. 1 django_heroku . settings ( locals ()) Now we need to hide the SECRET_KEY from the deployment code. For this, add this line of code before SECRET_KEY = \"Djfhslkdfsjf*(skdf0suerjwehksjdf\" 1 SECRET_KEY = config ( 'SECRET_KEY' ) Move your actual SECRET_KEY to the .env file that we are going to create. 6. Create a file .env \u00b6 Now, run a command in your terminal.It will create a file .env in your app directory. 1 touch .env Add your SECRET_KEY from setting.py to .env file. 7. Adding more to setting.py \u00b6 Do this in your app/settings.py . 1 2 3 4 STATICFILES_DIRS = [ os . path . join ( BASE_DIR , \"static\" ) ] Make sure you do not have this command in setting.py file already. If so remain it as it is. For more info 1 STATIC_ROOT = os . path . join ( BASE_DIR , 'staticfiles' ) 8. Static file serving for web apps \u00b6 To serve static assets I use the WhiteNoise project. To install: pip install whitenoise For more info Do this in your app/settings.py file. 1 2 3 4 5 6 #... #'django.middleware.security.SecurityMiddleware', 'whitenoise.middleware.WhiteNoiseMiddleware' , #'django.contrib.sessions.middleware.SessionMiddleware', #'django.middleware.common.CommonMiddleware', #... 1 STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage' 9. Create a Procfile \u00b6 Open the command prompt in your directory and type this command. Make sure you type Procfile correctly (casesensitve) 1 touch Procfile Open the Procfile and add this line in the file. 1 web: gunicorn <project name>.wsgi 10. Run Django Server \u00b6 Type this command in the command promt to open the django server. 1 python manage.py runserver run this command too. 1 python manage.py migrate If your site is working correctly then move to next step. 11. Creating a file requirements.txt \u00b6 This command create a file requiremets.txt and add all the dependencies that your application needed while pushing to heroku. 1 pip freeze > requirements.txt add dependency requests==2.21.0 to the requirements.txt file. 12. Heroku Sign up \u00b6 Start a heroku account\u200a\u2014\u200aSign up. Install Heroku Toolbelt commands After installing heroku toolbelt your terminal will support all the heroku commands.Open your terminal as administrator and run this code 1 heroku login login to your heroku account via terminal Enter your Heroku credentials. 1 2 3 Email: example@gmail.com Password (typing will be hidden): Authentication successful. Inside the project root, create a Heroku App: 1 heroku create Adding a Heroku app to Git remote 1 heroku git:remote -a <APPNAME> Open the heroku dashboard and navigate to your new created app. In setting tab, add the config vars: SECRET_KEY 13. Update Git repository \u00b6 1 2 3 git add --all git status # to view all the changes git commit -m \"ready to push\" 14. Finally Push to Heroku \u00b6 1 git push heroku master","title":"Django | Heroku"},{"location":"#push-your-django-apps-to-heroku","text":"Mohsin Mahmood edited this page on May 22, 2019 Heroku is a cloud application platform, it is a PaaS (Platform-as-a-service) service. It allows you to deploy your web application from your localhost to cloud so that your application could be commercialized and could get production ready.","title":"Push your Django Apps to Heroku"},{"location":"#1-preparing-your-application","text":"Copy the Project folder separately for deployment.","title":"1. Preparing your application"},{"location":"#2-initialize-git-repositor","text":"Install Git Press WIN + R Type cmd and click OK Navigate to project folder Make sure your are in the directory where the manage.py exists 1 2 3 4 git config --global user.name \"Your Name\" git config --global user.email \"you@youraddress.com\" git config --global user.email \"you@youraddress.com\" git init","title":"2. Initialize Git Repositor"},{"location":"#3-add-files-to-git","text":"1 2 3 git add --all git commit -m \"Commit Message\" git push","title":"3. Add Files To Git"},{"location":"#4-activate-virtual-environment","text":"Activating virtual environment. 1 2 3 4 manage.py # The configuration file. venv/ Scripts/ activate Run these command to activate the environment. 1 2 cd venv/Scripts/ activate If virtual environment not already exists. Run these commands on command prompt. 1 pip install virtualenv Install all the required libraries that your project required via pip command. Plus install the following dependencies in your virtual environment. 1 2 3 pip install gunicorn pip install django-heroku pip install python-decouple django-heroku: official package by Heroku which made our deployment simple.","title":"4. Activate Virtual Environment"},{"location":"#5-modify-settingpy-file","text":"Now, In app/settings.py file add below content 1 2 3 4 #import os import django_heroku from decouple import config import dj_database_url At the end of the setting.py file add this line also. 1 django_heroku . settings ( locals ()) Now we need to hide the SECRET_KEY from the deployment code. For this, add this line of code before SECRET_KEY = \"Djfhslkdfsjf*(skdf0suerjwehksjdf\" 1 SECRET_KEY = config ( 'SECRET_KEY' ) Move your actual SECRET_KEY to the .env file that we are going to create.","title":"5 Modify Setting.py file"},{"location":"#6-create-a-file-env","text":"Now, run a command in your terminal.It will create a file .env in your app directory. 1 touch .env Add your SECRET_KEY from setting.py to .env file.","title":"6. Create a file .env"},{"location":"#7-adding-more-to-settingpy","text":"Do this in your app/settings.py . 1 2 3 4 STATICFILES_DIRS = [ os . path . join ( BASE_DIR , \"static\" ) ] Make sure you do not have this command in setting.py file already. If so remain it as it is. For more info 1 STATIC_ROOT = os . path . join ( BASE_DIR , 'staticfiles' )","title":"7. Adding more to setting.py"},{"location":"#8-static-file-serving-for-web-apps","text":"To serve static assets I use the WhiteNoise project. To install: pip install whitenoise For more info Do this in your app/settings.py file. 1 2 3 4 5 6 #... #'django.middleware.security.SecurityMiddleware', 'whitenoise.middleware.WhiteNoiseMiddleware' , #'django.contrib.sessions.middleware.SessionMiddleware', #'django.middleware.common.CommonMiddleware', #... 1 STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'","title":"8. Static file serving for web apps"},{"location":"#9-create-a-procfile","text":"Open the command prompt in your directory and type this command. Make sure you type Procfile correctly (casesensitve) 1 touch Procfile Open the Procfile and add this line in the file. 1 web: gunicorn <project name>.wsgi","title":"9. Create a Procfile"},{"location":"#10-run-django-server","text":"Type this command in the command promt to open the django server. 1 python manage.py runserver run this command too. 1 python manage.py migrate If your site is working correctly then move to next step.","title":"10. Run Django Server"},{"location":"#11-creating-a-file-requirementstxt","text":"This command create a file requiremets.txt and add all the dependencies that your application needed while pushing to heroku. 1 pip freeze > requirements.txt add dependency requests==2.21.0 to the requirements.txt file.","title":"11. Creating a file requirements.txt"},{"location":"#12-heroku-sign-up","text":"Start a heroku account\u200a\u2014\u200aSign up. Install Heroku Toolbelt commands After installing heroku toolbelt your terminal will support all the heroku commands.Open your terminal as administrator and run this code 1 heroku login login to your heroku account via terminal Enter your Heroku credentials. 1 2 3 Email: example@gmail.com Password (typing will be hidden): Authentication successful. Inside the project root, create a Heroku App: 1 heroku create Adding a Heroku app to Git remote 1 heroku git:remote -a <APPNAME> Open the heroku dashboard and navigate to your new created app. In setting tab, add the config vars: SECRET_KEY","title":"12. Heroku Sign up"},{"location":"#13-update-git-repository","text":"1 2 3 git add --all git status # to view all the changes git commit -m \"ready to push\"","title":"13. Update Git repository"},{"location":"#14-finally-push-to-heroku","text":"1 git push heroku master","title":"14. Finally Push to Heroku"},{"location":"Ubuntu-guide-101/","text":"Ubuntu default settings \u00b6 https://askubuntu.com/questions/114429/default-save-directory-for-gnome-screenshot Cursor settings Via GUI \u00b6 Install dconf-editor http://apt.ubuntu.com/p/dconf-tools From the command line, run the command sudo apt-get install dconf-editor Or click here to install from the Ubuntu Software Center: Install via the software centerfile:///home/user/Desktop/ https://apps.ubuntu.com/cat/applications/dconf-editor Press Alt + F2 and type dconf-editor Go to org -> gnome -> gnome-screenshot At \"auto-save-directory\" type the desired directory in the following format: file:///home/user/Desktop/ name: auto-save-directory, value: file:///full/path/ A tip for anyone who is using the configuration editor in unity: click on the arrow to the left the org text to expand it.","title":"Ubuntu Guide 101"},{"location":"Ubuntu-guide-101/#ubuntu-default-settings","text":"https://askubuntu.com/questions/114429/default-save-directory-for-gnome-screenshot Cursor settings","title":"Ubuntu default settings"},{"location":"Ubuntu-guide-101/#via-gui","text":"Install dconf-editor http://apt.ubuntu.com/p/dconf-tools From the command line, run the command sudo apt-get install dconf-editor Or click here to install from the Ubuntu Software Center: Install via the software centerfile:///home/user/Desktop/ https://apps.ubuntu.com/cat/applications/dconf-editor Press Alt + F2 and type dconf-editor Go to org -> gnome -> gnome-screenshot At \"auto-save-directory\" type the desired directory in the following format: file:///home/user/Desktop/ name: auto-save-directory, value: file:///full/path/ A tip for anyone who is using the configuration editor in unity: click on the arrow to the left the org text to expand it.","title":"Via GUI"},{"location":"all-in-one/","text":"Discord Black Screen \u00b6 sudo apt-get install libc++1","title":"AIO"},{"location":"all-in-one/#discord-black-screen","text":"sudo apt-get install libc++1","title":"Discord Black Screen"},{"location":"elasticsearch101/","text":"Elasticsearch \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 # Cluster Health Check ## Overall Cluster Health GET /_cat/health?v ## Node Health GET /_cat/nodes?v ## List Indices GET /_cat/indices?v ## Create 'sales' Index PUT /sales ## Add 'order' to 'sales' index PUT /sales/order/123 { \"orderID\" : \"123\" , \"orderAmount\" : \"500\" } ## Retrieve document GET /sales/order/123 ## Delete index DELETE /sales ## List indices GET /_cat/indices?v 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # Create File with Requests (make sure to include new line at end of file) vi reqs { \"index\" : { \"_index\" : \"my-test\" , \"_type\" : \"my-type\" , \"_id\" : \"1\" } } { \"col1\" : \"val1\" } { \"index\" : { \"_index\" : \"my-test\" , \"_type\" : \"my-type\" , \"_id\" : \"2\" } } { \"col1\" : \"val2\" } { \"index\" : { \"_index\" : \"my-test\" , \"_type\" : \"my-type\" , \"_id\" : \"3\" } } { \"col1\" : \"val3\" } # Load from CURL curl -s -H \"Content-Type: application/x-ndjson\" -XPOST localhost:9200/_bulk --data-binary \"@reqs\" ; echo # Check Kibana GET /my-test GET /my-test/my-type/1 # Load from Console POST _bulk { \"index\" : { \"_index\" : \"my-test-console\" , \"_type\" : \"my-type\" , \"_id\" : \"1\" } } { \"col1\" : \"val1\" } { \"index\" : { \"_index\" : \"my-test-console\" , \"_type\" : \"my-type\" , \"_id\" : \"2\" } } { \"col1\" : \"val2\" } { \"index\" : { \"_index\" : \"my-test-console\" , \"_type\" : \"my-type\" , \"_id\" : \"3\" } } { \"col1\" : \"val3\" } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # Download from Elastic or use Exercise Files # If necessary unzip the accounts.zip file # Inspect Accounts.json head accounts.json # Load via curl, notice the endpoint and type curl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/bank/account/_bulk?pretty' --data-binary @accounts.json # check inside ES GET /_cat/indices GET /bank # set index pattern in Kibana Management > Uncheck time-based events > bank # View on left to see properties 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 # Download sample logs from Elastic or use Exercise Files # If necessary unzip/tar logs.jsonl.gz # Add mapping for lat/lon geo properties for logs PUT /logstash-2015.05.18 { \"mappings\" : { \"log\" : { \"properties\" : { \"geo\" : { \"properties\" : { \"coordinates\" : { \"type\" : \"geo_point\" } } } } } } } # Create two more to simulate daily logs PUT /logstash-2015.05.19 { \"mappings\" : { \"log\" : { \"properties\" : { \"geo\" : { \"properties\" : { \"coordinates\" : { \"type\" : \"geo_point\" } } } } } } } PUT /logstash-2015.05.20 { \"mappings\" : { \"log\" : { \"properties\" : { \"geo\" : { \"properties\" : { \"coordinates\" : { \"type\" : \"geo_point\" } } } } } } } # Check out structure of log data head logs.jsonl # Import log files curl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/_bulk?pretty' --data-binary @logs.jsonl # Check ES for data GET /_cat/indices/logstash-* # Change default index pattern in Kibana # Load Shakespeare data (download from elastic or find in the Exercise Files) # Check out shakespeare.json head shakespeare.json # Shakespeare Schema { \"line_id\" : INT, \"play_name\" : \"String\" , \"speech_number\" : INT, \"line_number\" : \"String\" , \"speaker\" : \"String\" , \"text_entry\" : \"String\" , } # Create Shakespeare index with data types PUT /shakespeare { \"mappings\" : { \"_default_\" : { \"properties\" : { \"speaker\" : { \"type\" : \"keyword\" } , \"play_name\" : { \"type\" : \"keyword\" } , \"line_id\" : { \"type\" : \"integer\" } , \"speech_number\" : { \"type\" : \"integer\" } } } } } # Load Shakespeare data curl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/shakespeare/_bulk?pretty' --data-binary @shakespeare.json # Check out index in ES GET /shakespeare GET /_cat/indices?v 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 # show me everything GET bank/account/_search # find CA accounts only GET bank/account/_search { \"query\" : { \"match\" : { \"state\" : \"CA\" } } } # find \"Techade\" accounts in CA only GET bank/account/_search { \"query\" : { \"bool\" : { \"must\" : [ { \"match\" : { \"state\" : \"CA\" } } , { \"match\" : { \"employer\" : \"Techade\" }} ] } } } # find non \"Techade\" accounts outside of CA GET bank/account/_search { \"query\" : { \"bool\" : { \"must_not\" : [ { \"match\" : { \"state\" : \"CA\" } } , { \"match\" : { \"employer\" : \"Techade\" }} ] } } } # Boost results for Smith GET bank/account/_search { \"query\" : { \"bool\" : { \"should\" : [ { \"match\" : { \"state\" : \"CA\" } } , { \"match\" : { \"lastname\" : { \"query\" : \"Smith\" , \"boost\" : 3 } } } ] } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 # Term Query GET bank/account/_search { \"query\" : { \"term\" : { \"account_number\" : 516 } } } # Returns null because \"state\" is a text field (hence not an exact match) GET bank/account/_search { \"query\" : { \"term\" : { \"state\" : \"RI\" } } } # This works because it uses the \"analysis\" process GET bank/account/_search { \"query\" : { \"match\" : { \"state\" : \"RI\" } } } # Terms can return multiple results GET bank/account/_search { \"query\" : { \"terms\" : { \"account_number\" : [ 516 ,851 ] } } } # Range Queries ## gte = Greater-than or equal to ## gt = Greater-than ## lte = Less-than or equal to ## lt = Less-than # Show all accounts between 516 and 851, boosting the importance GET bank/account/_search { \"query\" : { \"range\" : { \"account_number\" : { \"gte\" : 516 , \"lte\" : 851 , \"boost\" : 2 } } } } # Show all account holders older than 35 GET bank/account/_search { \"query\" : { \"range\" : { \"age\" : { \"gt\" : 35 } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 # Basic Example GET bank/_analyze { \"tokenizer\" : \"standard\" , \"text\" : \"The Moon is Made of Cheese Some Say\" } # Mixed String GET bank/_analyze { \"tokenizer\" : \"standard\" , \"text\" : \"The Moon-is-Made of Cheese.Some Say $ \" } # Uset the letter tokenizer GET bank/_analyze { \"tokenizer\" : \"letter\" , \"text\" : \"The Moon-is-Made of Cheese.Some Say $ \" } # How about a URL GET bank/_analyze { \"tokenizer\" : \"standard\" , \"text\" : \"you@example.com login at https://bensullins.com attempt\" } GET bank/_analyze { \"tokenizer\" : \"uax_url_email\" , \"text\" : \"you@example.com login at https://bensullins.com attempt\" } # Where it breaks, two fields with diff analyzers PUT /idx1 { \"mappings\" : { \"t1\" : { \"properties\" : { \"title\" : { \"type\" : \"text\" , \"analyzer\" : \"standard\" } , \"english_title\" : { \"type\" : \"text\" , \"analyzer\" : \"english\" } } } } } GET idx1 GET idx1/_analyze { \"field\" : \"title\" , \"text\" : \"Bears\" } GET idx1/_analyze { \"field\" : \"english_title\" , \"text\" : \"Bears\" } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 # Count of Accounts by State # Must be keyword field GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } } } } # Add average balance in each state # Nesting the metric inside the agg GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } , \"aggs\" : { \"avg_bal\" : { \"avg\" : { \"field\" : \"balance\" } } } } } } # Breakdown further with Nesting GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } , \"aggs\" : { \"avg_bal\" : { \"avg\" : { \"field\" : \"balance\" } } , \"gender\" : { \"terms\" : { \"field\" : \"gender.keyword\" } } } } } } # Add avg_price metric to lowest level GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } , \"aggs\" : { \"avg_bal\" : { \"avg\" : { \"field\" : \"balance\" } } , \"gender\" : { \"terms\" : { \"field\" : \"gender.keyword\" } , \"aggs\" : { \"avg_bal\" : { \"avg\" : { \"field\" : \"balance\" } } } } } } } } ## Get stats about bank balances ## Size=1 to omit search results GET bank/account/_search { \"size\" : 1 , \"aggs\" : { \"balance-stats\" : { \"stats\" : { \"field\" : \"balance\" } } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 # Count of Accounts by State # Must be keyword field GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } } } } # This is the equivalent of using match_all GET bank/account/_search { \"size\" : 0 , \"query\" : { \"match_all\" : {} } , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } } } } # Aggs work in the context of the query, so apply a filter like normal GET bank/account/_search { \"size\" : 0 , \"query\" : { \"match\" : { \"state.keyword\" : \"CA\" } } , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } } } } # You can also filter on terms GET bank/account/_search { \"size\" : 0 , \"query\" : { \"bool\" : { \"must\" : [ { \"match\" : { \"state.keyword\" : \"CA\" }} , { \"range\" : { \"age\" : { \"gt\" : 35 }}} ] } } , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } } } } # Lets add a metric back in GET bank/account/_search { \"size\" : 0 , \"query\" : { \"bool\" : { \"must\" : [ { \"match\" : { \"state.keyword\" : \"CA\" }} , { \"range\" : { \"age\" : { \"gt\" : 35 }}} ] } } , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } , \"aggs\" : { \"avg_bal\" : { \"avg\" : { \"field\" : \"balance\" } }} } } } # You can also just filter the results GET bank/account/_search { \"size\" : 0 , \"query\" : { \"match\" : { \"state.keyword\" : \"CA\" } } , \"aggs\" : { \"over35\" : { \"filter\" : { \"range\" : { \"age\" : { \"gt\" : 35 }} } , \"aggs\" : { \"avg_bal\" : { \"avg\" : { \"field\" : \"balance\" } }} } } } # Look at state avg and global average GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"state_avg\" : { \"terms\" : { \"field\" : \"state.keyword\" } , \"aggs\" : { \"avg_bal\" : { \"avg\" : { \"field\" : \"balance\" }}} } , \"global_avg\" : { \"global\" : {} , \"aggs\" : { \"avg_bal\" : { \"avg\" : { \"field\" : \"balance\" }}} } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 # Look at the percentiles for the balances GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"pct_balances\" : { \"percentiles\" : { \"field\" : \"balance\" , \"percents\" : [ 1 , 5 , 25 , 50 , 75 , 95 , 99 ] } } } } # Can also calculate High Dynamic Range (HDR) Historgram GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"pct_balances\" : { \"percentiles\" : { \"field\" : \"balance\" , \"percents\" : [ 1 , 5 , 25 , 50 , 75 , 95 , 99 ] , \"hdr\" : { \"number_of_significant_value_digits\" : 3 } } } } } # We can use the percentile ranks agg for checking a individual values GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"bal_outlier\" : { \"percentile_ranks\" : { \"field\" : \"balance\" , \"values\" : [ 35000 ,50000 ] , \"hdr\" : { \"number_of_significant_value_digits\" : 3 } } } } } # Similarly we can create a histogram GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"bals\" : { \"histogram\" : { \"field\" : \"balance\" , \"interval\" : 500 } } } } Download File \u00b6 logs.json accounts.json","title":"Elasticsearch 101"},{"location":"elasticsearch101/#elasticsearch","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 # Cluster Health Check ## Overall Cluster Health GET /_cat/health?v ## Node Health GET /_cat/nodes?v ## List Indices GET /_cat/indices?v ## Create 'sales' Index PUT /sales ## Add 'order' to 'sales' index PUT /sales/order/123 { \"orderID\" : \"123\" , \"orderAmount\" : \"500\" } ## Retrieve document GET /sales/order/123 ## Delete index DELETE /sales ## List indices GET /_cat/indices?v 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # Create File with Requests (make sure to include new line at end of file) vi reqs { \"index\" : { \"_index\" : \"my-test\" , \"_type\" : \"my-type\" , \"_id\" : \"1\" } } { \"col1\" : \"val1\" } { \"index\" : { \"_index\" : \"my-test\" , \"_type\" : \"my-type\" , \"_id\" : \"2\" } } { \"col1\" : \"val2\" } { \"index\" : { \"_index\" : \"my-test\" , \"_type\" : \"my-type\" , \"_id\" : \"3\" } } { \"col1\" : \"val3\" } # Load from CURL curl -s -H \"Content-Type: application/x-ndjson\" -XPOST localhost:9200/_bulk --data-binary \"@reqs\" ; echo # Check Kibana GET /my-test GET /my-test/my-type/1 # Load from Console POST _bulk { \"index\" : { \"_index\" : \"my-test-console\" , \"_type\" : \"my-type\" , \"_id\" : \"1\" } } { \"col1\" : \"val1\" } { \"index\" : { \"_index\" : \"my-test-console\" , \"_type\" : \"my-type\" , \"_id\" : \"2\" } } { \"col1\" : \"val2\" } { \"index\" : { \"_index\" : \"my-test-console\" , \"_type\" : \"my-type\" , \"_id\" : \"3\" } } { \"col1\" : \"val3\" } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # Download from Elastic or use Exercise Files # If necessary unzip the accounts.zip file # Inspect Accounts.json head accounts.json # Load via curl, notice the endpoint and type curl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/bank/account/_bulk?pretty' --data-binary @accounts.json # check inside ES GET /_cat/indices GET /bank # set index pattern in Kibana Management > Uncheck time-based events > bank # View on left to see properties 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 # Download sample logs from Elastic or use Exercise Files # If necessary unzip/tar logs.jsonl.gz # Add mapping for lat/lon geo properties for logs PUT /logstash-2015.05.18 { \"mappings\" : { \"log\" : { \"properties\" : { \"geo\" : { \"properties\" : { \"coordinates\" : { \"type\" : \"geo_point\" } } } } } } } # Create two more to simulate daily logs PUT /logstash-2015.05.19 { \"mappings\" : { \"log\" : { \"properties\" : { \"geo\" : { \"properties\" : { \"coordinates\" : { \"type\" : \"geo_point\" } } } } } } } PUT /logstash-2015.05.20 { \"mappings\" : { \"log\" : { \"properties\" : { \"geo\" : { \"properties\" : { \"coordinates\" : { \"type\" : \"geo_point\" } } } } } } } # Check out structure of log data head logs.jsonl # Import log files curl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/_bulk?pretty' --data-binary @logs.jsonl # Check ES for data GET /_cat/indices/logstash-* # Change default index pattern in Kibana # Load Shakespeare data (download from elastic or find in the Exercise Files) # Check out shakespeare.json head shakespeare.json # Shakespeare Schema { \"line_id\" : INT, \"play_name\" : \"String\" , \"speech_number\" : INT, \"line_number\" : \"String\" , \"speaker\" : \"String\" , \"text_entry\" : \"String\" , } # Create Shakespeare index with data types PUT /shakespeare { \"mappings\" : { \"_default_\" : { \"properties\" : { \"speaker\" : { \"type\" : \"keyword\" } , \"play_name\" : { \"type\" : \"keyword\" } , \"line_id\" : { \"type\" : \"integer\" } , \"speech_number\" : { \"type\" : \"integer\" } } } } } # Load Shakespeare data curl -H 'Content-Type: application/x-ndjson' -XPOST 'localhost:9200/shakespeare/_bulk?pretty' --data-binary @shakespeare.json # Check out index in ES GET /shakespeare GET /_cat/indices?v 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 # show me everything GET bank/account/_search # find CA accounts only GET bank/account/_search { \"query\" : { \"match\" : { \"state\" : \"CA\" } } } # find \"Techade\" accounts in CA only GET bank/account/_search { \"query\" : { \"bool\" : { \"must\" : [ { \"match\" : { \"state\" : \"CA\" } } , { \"match\" : { \"employer\" : \"Techade\" }} ] } } } # find non \"Techade\" accounts outside of CA GET bank/account/_search { \"query\" : { \"bool\" : { \"must_not\" : [ { \"match\" : { \"state\" : \"CA\" } } , { \"match\" : { \"employer\" : \"Techade\" }} ] } } } # Boost results for Smith GET bank/account/_search { \"query\" : { \"bool\" : { \"should\" : [ { \"match\" : { \"state\" : \"CA\" } } , { \"match\" : { \"lastname\" : { \"query\" : \"Smith\" , \"boost\" : 3 } } } ] } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 # Term Query GET bank/account/_search { \"query\" : { \"term\" : { \"account_number\" : 516 } } } # Returns null because \"state\" is a text field (hence not an exact match) GET bank/account/_search { \"query\" : { \"term\" : { \"state\" : \"RI\" } } } # This works because it uses the \"analysis\" process GET bank/account/_search { \"query\" : { \"match\" : { \"state\" : \"RI\" } } } # Terms can return multiple results GET bank/account/_search { \"query\" : { \"terms\" : { \"account_number\" : [ 516 ,851 ] } } } # Range Queries ## gte = Greater-than or equal to ## gt = Greater-than ## lte = Less-than or equal to ## lt = Less-than # Show all accounts between 516 and 851, boosting the importance GET bank/account/_search { \"query\" : { \"range\" : { \"account_number\" : { \"gte\" : 516 , \"lte\" : 851 , \"boost\" : 2 } } } } # Show all account holders older than 35 GET bank/account/_search { \"query\" : { \"range\" : { \"age\" : { \"gt\" : 35 } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 # Basic Example GET bank/_analyze { \"tokenizer\" : \"standard\" , \"text\" : \"The Moon is Made of Cheese Some Say\" } # Mixed String GET bank/_analyze { \"tokenizer\" : \"standard\" , \"text\" : \"The Moon-is-Made of Cheese.Some Say $ \" } # Uset the letter tokenizer GET bank/_analyze { \"tokenizer\" : \"letter\" , \"text\" : \"The Moon-is-Made of Cheese.Some Say $ \" } # How about a URL GET bank/_analyze { \"tokenizer\" : \"standard\" , \"text\" : \"you@example.com login at https://bensullins.com attempt\" } GET bank/_analyze { \"tokenizer\" : \"uax_url_email\" , \"text\" : \"you@example.com login at https://bensullins.com attempt\" } # Where it breaks, two fields with diff analyzers PUT /idx1 { \"mappings\" : { \"t1\" : { \"properties\" : { \"title\" : { \"type\" : \"text\" , \"analyzer\" : \"standard\" } , \"english_title\" : { \"type\" : \"text\" , \"analyzer\" : \"english\" } } } } } GET idx1 GET idx1/_analyze { \"field\" : \"title\" , \"text\" : \"Bears\" } GET idx1/_analyze { \"field\" : \"english_title\" , \"text\" : \"Bears\" } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 # Count of Accounts by State # Must be keyword field GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } } } } # Add average balance in each state # Nesting the metric inside the agg GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } , \"aggs\" : { \"avg_bal\" : { \"avg\" : { \"field\" : \"balance\" } } } } } } # Breakdown further with Nesting GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } , \"aggs\" : { \"avg_bal\" : { \"avg\" : { \"field\" : \"balance\" } } , \"gender\" : { \"terms\" : { \"field\" : \"gender.keyword\" } } } } } } # Add avg_price metric to lowest level GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } , \"aggs\" : { \"avg_bal\" : { \"avg\" : { \"field\" : \"balance\" } } , \"gender\" : { \"terms\" : { \"field\" : \"gender.keyword\" } , \"aggs\" : { \"avg_bal\" : { \"avg\" : { \"field\" : \"balance\" } } } } } } } } ## Get stats about bank balances ## Size=1 to omit search results GET bank/account/_search { \"size\" : 1 , \"aggs\" : { \"balance-stats\" : { \"stats\" : { \"field\" : \"balance\" } } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 # Count of Accounts by State # Must be keyword field GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } } } } # This is the equivalent of using match_all GET bank/account/_search { \"size\" : 0 , \"query\" : { \"match_all\" : {} } , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } } } } # Aggs work in the context of the query, so apply a filter like normal GET bank/account/_search { \"size\" : 0 , \"query\" : { \"match\" : { \"state.keyword\" : \"CA\" } } , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } } } } # You can also filter on terms GET bank/account/_search { \"size\" : 0 , \"query\" : { \"bool\" : { \"must\" : [ { \"match\" : { \"state.keyword\" : \"CA\" }} , { \"range\" : { \"age\" : { \"gt\" : 35 }}} ] } } , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } } } } # Lets add a metric back in GET bank/account/_search { \"size\" : 0 , \"query\" : { \"bool\" : { \"must\" : [ { \"match\" : { \"state.keyword\" : \"CA\" }} , { \"range\" : { \"age\" : { \"gt\" : 35 }}} ] } } , \"aggs\" : { \"states\" : { \"terms\" : { \"field\" : \"state.keyword\" } , \"aggs\" : { \"avg_bal\" : { \"avg\" : { \"field\" : \"balance\" } }} } } } # You can also just filter the results GET bank/account/_search { \"size\" : 0 , \"query\" : { \"match\" : { \"state.keyword\" : \"CA\" } } , \"aggs\" : { \"over35\" : { \"filter\" : { \"range\" : { \"age\" : { \"gt\" : 35 }} } , \"aggs\" : { \"avg_bal\" : { \"avg\" : { \"field\" : \"balance\" } }} } } } # Look at state avg and global average GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"state_avg\" : { \"terms\" : { \"field\" : \"state.keyword\" } , \"aggs\" : { \"avg_bal\" : { \"avg\" : { \"field\" : \"balance\" }}} } , \"global_avg\" : { \"global\" : {} , \"aggs\" : { \"avg_bal\" : { \"avg\" : { \"field\" : \"balance\" }}} } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 # Look at the percentiles for the balances GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"pct_balances\" : { \"percentiles\" : { \"field\" : \"balance\" , \"percents\" : [ 1 , 5 , 25 , 50 , 75 , 95 , 99 ] } } } } # Can also calculate High Dynamic Range (HDR) Historgram GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"pct_balances\" : { \"percentiles\" : { \"field\" : \"balance\" , \"percents\" : [ 1 , 5 , 25 , 50 , 75 , 95 , 99 ] , \"hdr\" : { \"number_of_significant_value_digits\" : 3 } } } } } # We can use the percentile ranks agg for checking a individual values GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"bal_outlier\" : { \"percentile_ranks\" : { \"field\" : \"balance\" , \"values\" : [ 35000 ,50000 ] , \"hdr\" : { \"number_of_significant_value_digits\" : 3 } } } } } # Similarly we can create a histogram GET bank/account/_search { \"size\" : 0 , \"aggs\" : { \"bals\" : { \"histogram\" : { \"field\" : \"balance\" , \"interval\" : 500 } } } }","title":"Elasticsearch"},{"location":"elasticsearch101/#download-file","text":"logs.json accounts.json","title":"Download File"},{"location":"git-guide-101/","text":"Git Guide 101 \u00b6 Commit \u00b6 The \"commit\" command is used to save your changes to the local repository. Initialized a repository \u00b6 1 git init Add a file to the staging area \u00b6 1 git add --all Commiting files \u00b6 1 2 git commit -m \"message\" git commit -am \"message with adding file to the staging area \" Repository log \u00b6 1 git log Repository status \u00b6 1 git status Unstaging files \u00b6 1 2 3 4 git reset --hard git diff <1stVer commit hash> <LastVer commit hash> :: difference btw changes made Branch \u00b6 In Git, branches are a part of your everyday development process. Git branches are effectively a pointer to a snapshot of your changes. When you want to add a new feature or fix a bug\u2014no matter how big or how small\u2014you spawn a new branch to encapsulate your changes. This makes it harder for unstable code to get merged into the main code base, and it gives you the chance to clean up your future's history before merging it into the main branch. Create a branch \u00b6 1 2 git branch <branch-name> git checkout -b <branch-name> Merging a branch \u00b6 1 git merge <source-branch-name> Listing branches \u00b6 1 2 git branch git brach --list Removing a branch \u00b6 Remotly \u00b6 1 git push origin --delete <branch-name> Locally \u00b6 1 git branch -d <branch-name> Create a tag \u00b6 1 git tag <tag-name> Replace a tag \u00b6 1 git tag -f <new-tag-name> Listing tags \u00b6 1 2 git tag -l git tag Removing a tag \u00b6 1 git tag -d <tag-name> Fixing Common issues \u00b6 \u00b6 1 git log --oneline Ammend wiht previous commits \u00b6 1 2 3 4 git status git add --all git commit ammend git log --oneline Be carefull! When you ammend a commit, this will remove the tag from the commit if it has already Add tag to the latest ammend \u00b6 1 2 3 git tag git log --online git tag -f <update-tag> Show all changes \u00b6 1 git reflog Checkout differert state in the repository \u00b6 1 git reset HEAD@{5} Changes sitting there older version of this file \u00b6 1 2 3 4 5 6 git reset --hard or git reset HEAD@{3} --hard Reset Back to previous commits. \u00b6 1 2 git log --oneline git reset HEAD~2 --hard Last Commit gone but changes sitting there \u00b6 1 git reset HEAD~ --soft Stash -- file no need to put into stage \u00b6 1 git stash Taking stash file to the staging folder \u00b6 1 2 3 git stash pop git add --all git commit -m \"<message>\" Switch between branches A/B B/A \u00b6 1 git checkout <branch-name> Adding and Pushing an existing repository \u00b6 1 git remote add origin <link-to-github-repo> 1 2 git remote add origin https://github.com/mohsinmdl/GTIN-Prediction-System.git git push -u origin master List your existing remotes \u00b6 1 $ git remote -v Change a remote Git repository \u00b6 1 git remote set-url origin git@your.git.repo.example.com:user/repository2.git 1 2 3 4 5 6 7 8 You can check the configs of your repository by : git config -l which contains your remote repository url. Also, you can use the following command : git remote -v Adding submodule to git repo \u00b6 1 git submodule add https://github.com/mohsinmdl/mohsinmdl.github.io.git site Update Git submodule to latest commit on origin \u00b6 1 git submodule update --remote --merge Remving git from directory \u00b6 1 rm -rf .git Error \u00b6 Git refusing to merge unrelated histories Failure git pull origin master From https://github.com/mohsinmdl/mdl-portfolio * branch master -> FETCH_HEAD fatal: refusing to merge unrelated histories Failure There is no tracking information for the current branch. Please specify which branch you want to merge with. See git-pull(1) for details. solution \u00b6 1 git pull origin branchname --allow-unrelated-histories 1 git --work-tree=\".\" pull --allow-unrelated-histories 1 git branch --set-upstream-to=origin/master Save VSCODE Git Credentials \u00b6 If you wanna save your git password in VSCode, below is the command for that purpose -- 1 git config --global credential.helper store Failure git submodule add https://github.com/mohsinmdl/blogs-deploy public 'public' already exists in the index 1 git ls-files 1 git rm --cached <DIR> 1 git rm -f --cached <DIR> Failure fatal: Please stage your changes to .gitmodules or stash them to proceed 1 git rm --cached .gitmodules Remove module from .git folder \u00b6 ls -a cd .git cd modules/ rm -rf mdl-docs/ Git Pull with Submodule \u00b6 For a repo with submodules, we can pull all submodules using 1 git submodule update --init --recursive for the first time. All submodules will be pulled down locally. To update submodules, we can use 1 git submodule update --recursive --remote or simply 1 git pull --recurse-submodules Update Git submodule to latest commit on origin 1 git submodule foreach git checkout master Pushing all submodules recursively \u00b6 git1.7.11 ([ANNOUNCE] Git 1.7.11.rc1) mentions: \"git push --recurse-submodules\" learned to optionally look into the histories of submodules >bound to the superproject and push them out. So you can use: 1 git push --recurse-submodules=on-demand","title":"Git Guide 101"},{"location":"git-guide-101/#git-guide-101","text":"","title":"Git Guide 101"},{"location":"git-guide-101/#commit","text":"The \"commit\" command is used to save your changes to the local repository.","title":"Commit"},{"location":"git-guide-101/#initialized-a-repository","text":"1 git init","title":"Initialized a repository"},{"location":"git-guide-101/#add-a-file-to-the-staging-area","text":"1 git add --all","title":"Add a file to the staging area"},{"location":"git-guide-101/#commiting-files","text":"1 2 git commit -m \"message\" git commit -am \"message with adding file to the staging area \"","title":"Commiting files"},{"location":"git-guide-101/#repository-log","text":"1 git log","title":"Repository log"},{"location":"git-guide-101/#repository-status","text":"1 git status","title":"Repository status"},{"location":"git-guide-101/#unstaging-files","text":"1 2 3 4 git reset --hard git diff <1stVer commit hash> <LastVer commit hash> :: difference btw changes made","title":"Unstaging files"},{"location":"git-guide-101/#branch","text":"In Git, branches are a part of your everyday development process. Git branches are effectively a pointer to a snapshot of your changes. When you want to add a new feature or fix a bug\u2014no matter how big or how small\u2014you spawn a new branch to encapsulate your changes. This makes it harder for unstable code to get merged into the main code base, and it gives you the chance to clean up your future's history before merging it into the main branch.","title":"Branch"},{"location":"git-guide-101/#create-a-branch","text":"1 2 git branch <branch-name> git checkout -b <branch-name>","title":"Create a branch"},{"location":"git-guide-101/#merging-a-branch","text":"1 git merge <source-branch-name>","title":"Merging a branch"},{"location":"git-guide-101/#listing-branches","text":"1 2 git branch git brach --list","title":"Listing branches"},{"location":"git-guide-101/#removing-a-branch","text":"","title":"Removing a branch"},{"location":"git-guide-101/#remotly","text":"1 git push origin --delete <branch-name>","title":"Remotly"},{"location":"git-guide-101/#locally","text":"1 git branch -d <branch-name>","title":"Locally"},{"location":"git-guide-101/#create-a-tag","text":"1 git tag <tag-name>","title":"Create a tag"},{"location":"git-guide-101/#replace-a-tag","text":"1 git tag -f <new-tag-name>","title":"Replace a tag"},{"location":"git-guide-101/#listing-tags","text":"1 2 git tag -l git tag","title":"Listing tags"},{"location":"git-guide-101/#removing-a-tag","text":"1 git tag -d <tag-name>","title":"Removing a tag"},{"location":"git-guide-101/#fixing-common-issues","text":"","title":"Fixing Common issues"},{"location":"git-guide-101/#_1","text":"1 git log --oneline","title":""},{"location":"git-guide-101/#ammend-wiht-previous-commits","text":"1 2 3 4 git status git add --all git commit ammend git log --oneline Be carefull! When you ammend a commit, this will remove the tag from the commit if it has already","title":"Ammend wiht previous commits"},{"location":"git-guide-101/#add-tag-to-the-latest-ammend","text":"1 2 3 git tag git log --online git tag -f <update-tag>","title":"Add tag to the latest ammend"},{"location":"git-guide-101/#show-all-changes","text":"1 git reflog","title":"Show all changes"},{"location":"git-guide-101/#checkout-differert-state-in-the-repository","text":"1 git reset HEAD@{5} Changes sitting there","title":"Checkout differert state in the repository"},{"location":"git-guide-101/#older-version-of-this-file","text":"1 2 3 4 5 6 git reset --hard or git reset HEAD@{3} --hard","title":"older version of this file"},{"location":"git-guide-101/#reset-back-to-previous-commits","text":"1 2 git log --oneline git reset HEAD~2 --hard","title":"Reset Back to previous commits."},{"location":"git-guide-101/#last-commit-gone-but-changes-sitting-there","text":"1 git reset HEAD~ --soft","title":"Last Commit gone but changes sitting there"},{"location":"git-guide-101/#stash-file-no-need-to-put-into-stage","text":"1 git stash","title":"Stash -- file no need to put into stage"},{"location":"git-guide-101/#taking-stash-file-to-the-staging-folder","text":"1 2 3 git stash pop git add --all git commit -m \"<message>\"","title":"Taking stash file to the staging folder"},{"location":"git-guide-101/#switch-between-branches-ab-ba","text":"1 git checkout <branch-name>","title":"Switch between branches A/B B/A"},{"location":"git-guide-101/#adding-and-pushing-an-existing-repository","text":"1 git remote add origin <link-to-github-repo> 1 2 git remote add origin https://github.com/mohsinmdl/GTIN-Prediction-System.git git push -u origin master","title":"Adding and Pushing an existing repository"},{"location":"git-guide-101/#list-your-existing-remotes","text":"1 $ git remote -v","title":"List your existing remotes"},{"location":"git-guide-101/#change-a-remote-git-repository","text":"1 git remote set-url origin git@your.git.repo.example.com:user/repository2.git 1 2 3 4 5 6 7 8 You can check the configs of your repository by : git config -l which contains your remote repository url. Also, you can use the following command : git remote -v","title":"Change a remote Git repository"},{"location":"git-guide-101/#adding-submodule-to-git-repo","text":"1 git submodule add https://github.com/mohsinmdl/mohsinmdl.github.io.git site","title":"Adding submodule to git repo"},{"location":"git-guide-101/#update-git-submodule-to-latest-commit-on-origin","text":"1 git submodule update --remote --merge","title":"Update Git submodule to latest commit on origin"},{"location":"git-guide-101/#remving-git-from-directory","text":"1 rm -rf .git","title":"Remving git from directory"},{"location":"git-guide-101/#error","text":"Git refusing to merge unrelated histories Failure git pull origin master From https://github.com/mohsinmdl/mdl-portfolio * branch master -> FETCH_HEAD fatal: refusing to merge unrelated histories Failure There is no tracking information for the current branch. Please specify which branch you want to merge with. See git-pull(1) for details.","title":"Error"},{"location":"git-guide-101/#solution","text":"1 git pull origin branchname --allow-unrelated-histories 1 git --work-tree=\".\" pull --allow-unrelated-histories 1 git branch --set-upstream-to=origin/master","title":"solution"},{"location":"git-guide-101/#save-vscode-git-credentials","text":"If you wanna save your git password in VSCode, below is the command for that purpose -- 1 git config --global credential.helper store Failure git submodule add https://github.com/mohsinmdl/blogs-deploy public 'public' already exists in the index 1 git ls-files 1 git rm --cached <DIR> 1 git rm -f --cached <DIR> Failure fatal: Please stage your changes to .gitmodules or stash them to proceed 1 git rm --cached .gitmodules","title":"Save VSCODE Git Credentials"},{"location":"git-guide-101/#remove-module-from-git-folder","text":"ls -a cd .git cd modules/ rm -rf mdl-docs/","title":"Remove module from .git folder"},{"location":"git-guide-101/#git-pull-with-submodule","text":"For a repo with submodules, we can pull all submodules using 1 git submodule update --init --recursive for the first time. All submodules will be pulled down locally. To update submodules, we can use 1 git submodule update --recursive --remote or simply 1 git pull --recurse-submodules Update Git submodule to latest commit on origin 1 git submodule foreach git checkout master","title":"Git Pull with Submodule"},{"location":"git-guide-101/#pushing-all-submodules-recursively","text":"git1.7.11 ([ANNOUNCE] Git 1.7.11.rc1) mentions: \"git push --recurse-submodules\" learned to optionally look into the histories of submodules >bound to the superproject and push them out. So you can use: 1 git push --recurse-submodules=on-demand","title":"Pushing all submodules recursively"},{"location":"git-guide-guru/","text":"Git Guide Guru \u00b6","title":"Git Guide Guru"},{"location":"git-guide-guru/#git-guide-guru","text":"","title":"Git Guide Guru"},{"location":"mkdocs101/","text":"1 mkdocs serve --dev-addr=0.0.0.0:6565 Create file and directory in linux \u00b6 1 mkdir docs/linux101/ && cat > docs/linux101/linux-guide.md Adding links to the attached files Regex","title":"MKDocs Guide 101"},{"location":"mkdocs101/#create-file-and-directory-in-linux","text":"1 mkdir docs/linux101/ && cat > docs/linux101/linux-guide.md Adding links to the attached files Regex","title":"Create file and directory in linux"},{"location":"nodejs101/","text":"Node.js 101 \u00b6 firstFile.json 1 2 3 let hello = \"Hello World From NODE JS\" ; console . log ( hello ); The Global Objects global.js 1 2 3 4 5 \\ const path = require ( \"path\" ); console . log ( `The file name is ${ path . basename ( __filename ) } ` ); console . log ( __dirname ); console . log ( __filename ); globalProcess.js 1 2 3 4 5 6 7 8 9 \\ const grab = flag => { let indexAfterFlag = process . argv . indexOf ( flag ) + 1 ; return process . argv [ indexAfterFlag ]; }; const greeting = grab ( \"--greeting\" ); const user = grab ( \"--user\" ); console . log ( ` ${ greeting } ${ user } ` ); questions.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 \\ const questions = [ \"What is your name?\" , \"What would you rather be doing?\" , \"What is your preferred programming language?\" ]; const ask = ( i = 0 ) => { process . stdout . write ( ` \\ n \\ n \\ n ${ questions [ i ] } ` ); process . stdout . write ( ` > ` ); }; ask (); const answers = []; process . stdin . on ( \"data\" , data => { answers . push ( data . toString (). trim ()); if ( answers . length < questions . length ) { ask ( answers . length ); } else { process . exit (); } }); process . on ( \"exit\" , () => { const [ name , activity , lang ] = answers ; console . log ( ` Thank you for your anwsers. Go ${ activity } ${ name } you can write ${ lang } code later!!! ` ); }); timers.js 1 2 3 4 5 6 \\ const waitTime = 3000 ; console . log ( `setting a ${ waitTime / 1000 } second delay` ); const timerFinished = () => console . log ( \"done\" ); setTimeout ( timerFinished , waitTime ); timers02.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \\ const waitTime = 5000 ; const waitInterval = 500 ; let currentTime = 0 ; const incTime = () => { currentTime += waitInterval ; const p = Math . floor (( currentTime / waitTime ) * 100 ); }; console . log ( `setting a ${ waitTime / 1000 } second delay` ); const timerFinished = () => { clearInterval ( interval ); console . log ( \"done\" ); }; const interval = setInterval ( incTime , waitInterval ); setTimeout ( timerFinished , waitTime ); timers03.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 \\ const waitTime = 5000 ; const waitInterval = 500 ; let currentTime = 0 ; const incTime = () => { currentTime += waitInterval ; const p = Math . floor (( currentTime / waitTime ) * 100 ); process . stdout . clearLine (); process . stdout . cursorTo ( 0 ); process . stdout . write ( `waiting ... ${ p } %` ); }; console . log ( `setting a ${ waitTime / 1000 } second delay` ); const timerFinished = () => { clearInterval ( interval ); process . stdout . clearLine (); process . stdout . cursorTo ( 0 ); console . log ( \"done\" ); }; const interval = setInterval ( incTime , waitInterval ); setTimeout ( timerFinished , waitTime ); ask.js 1 2 3 4 5 6 7 8 9 10 \\ const readline = require ( \"readline\" ); const rl = readline . createInterface ({ input : process . stdin , output : process . stdout }); rl . question ( \"How do you like Node? \" , answer => { console . log ( `Your answer: ${ answer } ` ); }); questionsReadline.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 \\ const readline = require ( \"readline\" ); const rl = readline . createInterface ({ input : process . stdin , output : process . stdout }); const questions = [ \"What is your name? \" , \"Where do you live? \" , \"What are you going to do with node js? \" ]; const collectAnswers = ( questions , done ) => { const answers = []; const [ firstQuestion ] = questions ; const questionAnswered = answer => { answers . push ( answer ); if ( answers . length < questions . length ) { rl . question ( questions [ answers . length ], questionAnswered ); } else { done ( answers ); } }; rl . question ( firstQuestion , questionAnswered ); }; collectAnswers ( questions , answers => { console . log ( \"Thank you for your answers. \" ); console . log ( answers ); process . exit (); }); Export Modules \u00b6 myModule.js 1 2 3 4 5 6 7 8 9 10 11 12 \\ let count = 0 ; const inc = () => ++ count ; const dec = () => -- count ; const getCount = () => count ; module . exports = { inc , dec , getCount }; app.js 1 2 3 4 5 6 7 8 \\ const { inc , dec , getCount } = require ( \"./myModule\" ); inc (); inc (); inc (); dec (); console . log ( getCount ()); Creating Module \u00b6 collectAnswers.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 \\ const readline = require ( \"readline\" ); const rl = readline . createInterface ({ input : process . stdin , output : process . stdout }); module . exports = ( questions , done = f => f ) => { const answers = []; const [ firstQuestion ] = questions ; const questionAnswered = answer => { answers . push ( answer ); if ( answers . length < questions . length ) { rl . question ( questions [ answers . length ], questionAnswered ); } else { done ( answers ); } }; rl . question ( firstQuestion , questionAnswered ); }; questions03.js 1 2 3 4 5 6 7 8 9 10 11 12 13 \\ const collectAnswers = require ( \"./lib/collectAnswers\" ); const questions = [ \"What is your name? \" , \"Where do you live? \" , \"What are you going to do with node js? \" ]; collectAnswers ( questions , answers => { console . log ( \"Thank you for your answers. \" ); console . log ( answers ); process . exit (); }); Events \u00b6 events.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \\ const events = require ( \"events\" ); const emitter = new events . EventEmitter (); emitter . on ( \"customEvent\" , ( message , user ) => { console . log ( ` ${ user } : ${ message } ` ); }); process . stdin . on ( \"data\" , data => { const input = data . toString (). trim (); if ( input === \"exit\" ) { emitter . emit ( \"customEvent\" , \"Goodbye!\" , \"process\" ); process . exit (); } emitter . emit ( \"customEvent\" , input , \"terminal\" ); }); Question Example with Events collectAnswersEvent.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 \\ const readline = require ( \"readline\" ); const { EventEmitter } = require ( \"events\" ); const rl = readline . createInterface ({ input : process . stdin , output : process . stdout }); module . exports = ( questions , done = f => f ) => { const answers = []; const [ firstQuestion ] = questions ; const emitter = new EventEmitter (); const questionAnswered = answer => { emitter . emit ( \"answer\" , answer ); answers . push ( answer ); if ( answers . length < questions . length ) { rl . question ( questions [ answers . length ], questionAnswered ); } else { emitter . emit ( \"complete\" , answers ); done ( answers ); } }; rl . question ( firstQuestion , questionAnswered ); return emitter ; }; questionsEvent.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \\ const collectAnswers = require ( \"./lib/collectAnswersEvent\" ); const questions = [ \"What is your name? \" , \"Where do you live? \" , \"What are you going to do with node js? \" ]; const answerEvents = collectAnswers ( questions ); answerEvents . on ( \"answer\" , answer => console . log ( `question answered: ${ answer } ` ) ); answerEvents . on ( \"complete\" , answers => { console . log ( \"Thank you for your answers. \" ); console . log ( answers ); }); answerEvents . on ( \"complete\" , () => process . exit ()); File System \u00b6 list.js 1 2 3 4 5 6 7 8 9 10 11 \\ const fs = require ( \"fs\" ); fs . readdir ( \"./assets\" , ( err , files ) => { if ( err ) { throw err ; } console . log ( \"complete\" ); console . log ( files ); }); console . log ( \"started reading files\" ); readFile.js 1 2 3 4 5 6 7 8 9 10 \\ const fs = require ( \"fs\" ); fs . readFile ( \"./assets/alex.jpg\" , ( err , img ) => { if ( err ) { console . log ( `An error has occured: ${ err . message } ` ); process . exit (); } console . log ( \"file contents read\" ); console . log ( img ); }); writeFile.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \\ const fs = require ( \"fs\" ); const md = ` # This is a new file We can write text to a file with fs.writeFile * fs.readdir * fs.readFile * fs.writeFile ` ; fs . writeFile ( \"./assets/notes.md\" , md . trim (), err => { if ( err ) { throw err ; } console . log ( \"file saved\" ); }); directory.js 1 2 3 4 5 6 7 8 9 10 11 12 13 \\ const fs = require ( \"fs\" ); if ( fs . existsSync ( \"storage-files\" )) { console . log ( \"Already there\" ); } else { fs . mkdir ( \"storage-files\" , err => { if ( err ) { throw err ; } console . log ( \"directory created\" ); }); } append.js 1 2 3 4 5 6 7 8 9 10 \\ const fs = require ( \"fs\" ); const colorData = require ( \"./assets/colors.json\" ); colorData . colorList . forEach ( c => { fs . appendFile ( \"./storage-files/colors.md\" , ` ${ c . color } : ${ c . hex } \\ n` , err => { if ( err ) { throw err ; } }); }); rename.js 1 2 3 4 5 6 7 8 9 10 11 12 13 \\ const fs = require ( \"fs\" ); fs . renameSync ( \"./assets/colors.json\" , \"./assets/colorData.json\" ); fs . rename ( \"./assets/notes.md\" , \"./storage-files/notes.md\" , err => { if ( err ) { throw err ; } }); setTimeout (() => { fs . unlinkSync ( \"./assets/alex.jpg\" ); }, 4000 ); directories.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Removing Directoires const fs = require ( \"fs\" ); fs . readdirSync ( \"./storage\" ). forEach ( fileName => { fs . unlinkSync ( `./storage/ ${ fileName } ` ); }); fs . rmdir ( \"./storage\" , err => { if ( err ) { throw err ; } console . log ( \"./storage directory removed\" ); }); Files and Streams \u00b6 Readable File Streams readStream.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \\ const fs = require ( \"fs\" ); const readStream = fs . createReadStream ( \"./assets/lorum-ipsum.txt\" , \"UTF-8\" ); let fileTxt = \"\" ; console . log ( \"type something...\" ); readStream . on ( \"data\" , data => { console . log ( `I read ${ data . length - 1 } characters of text` ); fileTxt += data ; }); readStream . once ( \"data\" , data => { console . log ( data ); }); readStream . on ( \"end\" , () => { console . log ( \"finished reading file\" ); console . log ( `In total I read ${ fileTxt . length - 1 } characters of text` ); }); Writeable File Streams writeStream.js 1 2 3 4 5 6 \\ const fs = require ( \"fs\" ); const writeStream = fs . createWriteStream ( \"./assets/myFile.txt\" , \"UTF-8\" ); const readStream = fs . createReadStream ( \"./assets/lorum-ipsum.txt\" , \"UTF-8\" ); readStream . pipe ( writeStream ); Creating child process with exec exec.js 1 2 3 4 5 \\ const cp = require ( \"child_process\" ); cp . exec ( \"node readStream\" , ( err , data , stderr ) => { console . log ( data ); }); Creating child process with spawn spawn.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \\ const cp = require ( \"child_process\" ); const questionApp = cp . spawn ( \"node\" , [ \"questions.js\" ]); questionApp . stdin . write ( \"Alex \\n\" ); questionApp . stdin . write ( \"Tahoe \\n\" ); questionApp . stdin . write ( \"Change the world \\n\" ); questionApp . stdout . on ( \"data\" , data => { console . log ( `from the question app: ${ data } ` ); }); questionApp . on ( \"close\" , () => { console . log ( `questionApp process exited` ); });","title":"Node.js 101"},{"location":"nodejs101/#nodejs-101","text":"firstFile.json 1 2 3 let hello = \"Hello World From NODE JS\" ; console . log ( hello ); The Global Objects global.js 1 2 3 4 5 \\ const path = require ( \"path\" ); console . log ( `The file name is ${ path . basename ( __filename ) } ` ); console . log ( __dirname ); console . log ( __filename ); globalProcess.js 1 2 3 4 5 6 7 8 9 \\ const grab = flag => { let indexAfterFlag = process . argv . indexOf ( flag ) + 1 ; return process . argv [ indexAfterFlag ]; }; const greeting = grab ( \"--greeting\" ); const user = grab ( \"--user\" ); console . log ( ` ${ greeting } ${ user } ` ); questions.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 \\ const questions = [ \"What is your name?\" , \"What would you rather be doing?\" , \"What is your preferred programming language?\" ]; const ask = ( i = 0 ) => { process . stdout . write ( ` \\ n \\ n \\ n ${ questions [ i ] } ` ); process . stdout . write ( ` > ` ); }; ask (); const answers = []; process . stdin . on ( \"data\" , data => { answers . push ( data . toString (). trim ()); if ( answers . length < questions . length ) { ask ( answers . length ); } else { process . exit (); } }); process . on ( \"exit\" , () => { const [ name , activity , lang ] = answers ; console . log ( ` Thank you for your anwsers. Go ${ activity } ${ name } you can write ${ lang } code later!!! ` ); }); timers.js 1 2 3 4 5 6 \\ const waitTime = 3000 ; console . log ( `setting a ${ waitTime / 1000 } second delay` ); const timerFinished = () => console . log ( \"done\" ); setTimeout ( timerFinished , waitTime ); timers02.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \\ const waitTime = 5000 ; const waitInterval = 500 ; let currentTime = 0 ; const incTime = () => { currentTime += waitInterval ; const p = Math . floor (( currentTime / waitTime ) * 100 ); }; console . log ( `setting a ${ waitTime / 1000 } second delay` ); const timerFinished = () => { clearInterval ( interval ); console . log ( \"done\" ); }; const interval = setInterval ( incTime , waitInterval ); setTimeout ( timerFinished , waitTime ); timers03.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 \\ const waitTime = 5000 ; const waitInterval = 500 ; let currentTime = 0 ; const incTime = () => { currentTime += waitInterval ; const p = Math . floor (( currentTime / waitTime ) * 100 ); process . stdout . clearLine (); process . stdout . cursorTo ( 0 ); process . stdout . write ( `waiting ... ${ p } %` ); }; console . log ( `setting a ${ waitTime / 1000 } second delay` ); const timerFinished = () => { clearInterval ( interval ); process . stdout . clearLine (); process . stdout . cursorTo ( 0 ); console . log ( \"done\" ); }; const interval = setInterval ( incTime , waitInterval ); setTimeout ( timerFinished , waitTime ); ask.js 1 2 3 4 5 6 7 8 9 10 \\ const readline = require ( \"readline\" ); const rl = readline . createInterface ({ input : process . stdin , output : process . stdout }); rl . question ( \"How do you like Node? \" , answer => { console . log ( `Your answer: ${ answer } ` ); }); questionsReadline.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 \\ const readline = require ( \"readline\" ); const rl = readline . createInterface ({ input : process . stdin , output : process . stdout }); const questions = [ \"What is your name? \" , \"Where do you live? \" , \"What are you going to do with node js? \" ]; const collectAnswers = ( questions , done ) => { const answers = []; const [ firstQuestion ] = questions ; const questionAnswered = answer => { answers . push ( answer ); if ( answers . length < questions . length ) { rl . question ( questions [ answers . length ], questionAnswered ); } else { done ( answers ); } }; rl . question ( firstQuestion , questionAnswered ); }; collectAnswers ( questions , answers => { console . log ( \"Thank you for your answers. \" ); console . log ( answers ); process . exit (); });","title":"Node.js 101"},{"location":"nodejs101/#export-modules","text":"myModule.js 1 2 3 4 5 6 7 8 9 10 11 12 \\ let count = 0 ; const inc = () => ++ count ; const dec = () => -- count ; const getCount = () => count ; module . exports = { inc , dec , getCount }; app.js 1 2 3 4 5 6 7 8 \\ const { inc , dec , getCount } = require ( \"./myModule\" ); inc (); inc (); inc (); dec (); console . log ( getCount ());","title":"Export Modules"},{"location":"nodejs101/#creating-module","text":"collectAnswers.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 \\ const readline = require ( \"readline\" ); const rl = readline . createInterface ({ input : process . stdin , output : process . stdout }); module . exports = ( questions , done = f => f ) => { const answers = []; const [ firstQuestion ] = questions ; const questionAnswered = answer => { answers . push ( answer ); if ( answers . length < questions . length ) { rl . question ( questions [ answers . length ], questionAnswered ); } else { done ( answers ); } }; rl . question ( firstQuestion , questionAnswered ); }; questions03.js 1 2 3 4 5 6 7 8 9 10 11 12 13 \\ const collectAnswers = require ( \"./lib/collectAnswers\" ); const questions = [ \"What is your name? \" , \"Where do you live? \" , \"What are you going to do with node js? \" ]; collectAnswers ( questions , answers => { console . log ( \"Thank you for your answers. \" ); console . log ( answers ); process . exit (); });","title":"Creating Module"},{"location":"nodejs101/#events","text":"events.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \\ const events = require ( \"events\" ); const emitter = new events . EventEmitter (); emitter . on ( \"customEvent\" , ( message , user ) => { console . log ( ` ${ user } : ${ message } ` ); }); process . stdin . on ( \"data\" , data => { const input = data . toString (). trim (); if ( input === \"exit\" ) { emitter . emit ( \"customEvent\" , \"Goodbye!\" , \"process\" ); process . exit (); } emitter . emit ( \"customEvent\" , input , \"terminal\" ); }); Question Example with Events collectAnswersEvent.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 \\ const readline = require ( \"readline\" ); const { EventEmitter } = require ( \"events\" ); const rl = readline . createInterface ({ input : process . stdin , output : process . stdout }); module . exports = ( questions , done = f => f ) => { const answers = []; const [ firstQuestion ] = questions ; const emitter = new EventEmitter (); const questionAnswered = answer => { emitter . emit ( \"answer\" , answer ); answers . push ( answer ); if ( answers . length < questions . length ) { rl . question ( questions [ answers . length ], questionAnswered ); } else { emitter . emit ( \"complete\" , answers ); done ( answers ); } }; rl . question ( firstQuestion , questionAnswered ); return emitter ; }; questionsEvent.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \\ const collectAnswers = require ( \"./lib/collectAnswersEvent\" ); const questions = [ \"What is your name? \" , \"Where do you live? \" , \"What are you going to do with node js? \" ]; const answerEvents = collectAnswers ( questions ); answerEvents . on ( \"answer\" , answer => console . log ( `question answered: ${ answer } ` ) ); answerEvents . on ( \"complete\" , answers => { console . log ( \"Thank you for your answers. \" ); console . log ( answers ); }); answerEvents . on ( \"complete\" , () => process . exit ());","title":"Events"},{"location":"nodejs101/#file-system","text":"list.js 1 2 3 4 5 6 7 8 9 10 11 \\ const fs = require ( \"fs\" ); fs . readdir ( \"./assets\" , ( err , files ) => { if ( err ) { throw err ; } console . log ( \"complete\" ); console . log ( files ); }); console . log ( \"started reading files\" ); readFile.js 1 2 3 4 5 6 7 8 9 10 \\ const fs = require ( \"fs\" ); fs . readFile ( \"./assets/alex.jpg\" , ( err , img ) => { if ( err ) { console . log ( `An error has occured: ${ err . message } ` ); process . exit (); } console . log ( \"file contents read\" ); console . log ( img ); }); writeFile.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 \\ const fs = require ( \"fs\" ); const md = ` # This is a new file We can write text to a file with fs.writeFile * fs.readdir * fs.readFile * fs.writeFile ` ; fs . writeFile ( \"./assets/notes.md\" , md . trim (), err => { if ( err ) { throw err ; } console . log ( \"file saved\" ); }); directory.js 1 2 3 4 5 6 7 8 9 10 11 12 13 \\ const fs = require ( \"fs\" ); if ( fs . existsSync ( \"storage-files\" )) { console . log ( \"Already there\" ); } else { fs . mkdir ( \"storage-files\" , err => { if ( err ) { throw err ; } console . log ( \"directory created\" ); }); } append.js 1 2 3 4 5 6 7 8 9 10 \\ const fs = require ( \"fs\" ); const colorData = require ( \"./assets/colors.json\" ); colorData . colorList . forEach ( c => { fs . appendFile ( \"./storage-files/colors.md\" , ` ${ c . color } : ${ c . hex } \\ n` , err => { if ( err ) { throw err ; } }); }); rename.js 1 2 3 4 5 6 7 8 9 10 11 12 13 \\ const fs = require ( \"fs\" ); fs . renameSync ( \"./assets/colors.json\" , \"./assets/colorData.json\" ); fs . rename ( \"./assets/notes.md\" , \"./storage-files/notes.md\" , err => { if ( err ) { throw err ; } }); setTimeout (() => { fs . unlinkSync ( \"./assets/alex.jpg\" ); }, 4000 ); directories.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Removing Directoires const fs = require ( \"fs\" ); fs . readdirSync ( \"./storage\" ). forEach ( fileName => { fs . unlinkSync ( `./storage/ ${ fileName } ` ); }); fs . rmdir ( \"./storage\" , err => { if ( err ) { throw err ; } console . log ( \"./storage directory removed\" ); });","title":"File System"},{"location":"nodejs101/#files-and-streams","text":"Readable File Streams readStream.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \\ const fs = require ( \"fs\" ); const readStream = fs . createReadStream ( \"./assets/lorum-ipsum.txt\" , \"UTF-8\" ); let fileTxt = \"\" ; console . log ( \"type something...\" ); readStream . on ( \"data\" , data => { console . log ( `I read ${ data . length - 1 } characters of text` ); fileTxt += data ; }); readStream . once ( \"data\" , data => { console . log ( data ); }); readStream . on ( \"end\" , () => { console . log ( \"finished reading file\" ); console . log ( `In total I read ${ fileTxt . length - 1 } characters of text` ); }); Writeable File Streams writeStream.js 1 2 3 4 5 6 \\ const fs = require ( \"fs\" ); const writeStream = fs . createWriteStream ( \"./assets/myFile.txt\" , \"UTF-8\" ); const readStream = fs . createReadStream ( \"./assets/lorum-ipsum.txt\" , \"UTF-8\" ); readStream . pipe ( writeStream ); Creating child process with exec exec.js 1 2 3 4 5 \\ const cp = require ( \"child_process\" ); cp . exec ( \"node readStream\" , ( err , data , stderr ) => { console . log ( data ); }); Creating child process with spawn spawn.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \\ const cp = require ( \"child_process\" ); const questionApp = cp . spawn ( \"node\" , [ \"questions.js\" ]); questionApp . stdin . write ( \"Alex \\n\" ); questionApp . stdin . write ( \"Tahoe \\n\" ); questionApp . stdin . write ( \"Change the world \\n\" ); questionApp . stdout . on ( \"data\" , data => { console . log ( `from the question app: ${ data } ` ); }); questionApp . on ( \"close\" , () => { console . log ( `questionApp process exited` ); });","title":"Files and Streams"},{"location":"output/","text":"Welcome to day 1 of the Python Challenge! If you're here to learn Python, you've come to the right place. If you already have some Python experience, I hope I can teach you at least a few new tricks, or throw you a few challenging problems. If you're here to learn how to use Python for machine learning, data analysis, or visualization, then bad news: I won't be teaching any of that. Good news: we have several tracks on Kaggle Learn for just that purpose. The goal of this challenge is to quickly cover the fundamentals of the language - which will hopefully stand you in good stead whether you use Python for deep learning, data cleaning, or cheating at Scrabble. Each day of the Python Challenge will consist of two parts: - A tutorial notebook explaining Python concepts and showing example code. That's where you are now. - An exercise notebook with questions and coding problems to test your new knowledge. Today's tutorial includes a brief overview of Python syntax, variable assignment, and arithmetic operators. If you have previous Python experience, day 1 might not hold anything new for you, so feel free to skip straight to the exercise . These lessons borrow and adapt some content from A Whirlwind Tour of Python . Thanks to the author, Jake VanderPlas, for releasing it under a permissive license. If you're interested in a more thorough, theoretical grounding in Python, I encourage you to check out WTOP. Hello, Python! \u00b6 Python was named for the British comedy troupe Monty Python , so why not make our first Python program an homage to their famous [Spam]( https://en.wikipedia.org/wiki/Spam_(Monty_Python%29 ) skit? Just for fun, try reading over the code below and predicting what it's going to do when run. (If you have no idea, that's fine!) Then click the \"output\" button to see the results of our program. 1 2 3 4 5 6 7 8 9 10 11 spam_amount = 0 print ( spam_amount ) # Ordering Spam, egg, Spam, Spam, bacon and Spam (4 more servings of Spam) spam_amount = spam_amount + 4 if spam_amount > 0 : print ( \"But I don't want ANY spam!\" ) viking_song = \"Spam \" * spam_amount print ( viking_song ) There's a lot to unpack here! This silly program demonstrates many important aspects of what Python code looks like (its syntax ) and how it works (its semantics ). Let's run down the code from top to bottom. 1 spam_amount = 0 Variable assignment! Here we create a variable called spam_amount and assign it the value of 0 using = , Python's assignment operator. Aside : If you've programmed in certain other languages (like Java or C++), you might be noticing some things Python doesn't require us to do here: - we don't need to \"declare\" spam_amount before assigning to it - we don't need to tell Python what type of value spam_amount is going to refer to. In fact, we can even go on to reassign spam_amount to refer to a different sort of thing like a string or a boolean. 1 print ( spam_amount ) A function call . print is an extremely useful builtin Python function that displays the value passed to it on the screen. We call functions by putting parentheses after their name, with the inputs to the function (or arguments ) in between. 1 2 # Ordering Spam, egg, Spam, Spam, bacon and Spam (4 more servings of Spam) spam_amount = spam_amount + 4 The first line above is a comment . In Python, comments begin with the # symbol. Next we see an example of reassignment. Reassigning the value of an existing variable looks just the same as creating a variable - it still uses the = assignment operator. In this case, the value we're assigning to spam_amount involves a little simple arithmetic on its previous value. When it encounters this line, Python evaluates the expression on the right-hand-side of the = (0 + 4 = 4), and then assigns that value to the variable on the left- hand-side. 1 2 if spam_amount > 0 : print ( \"But I don't want ANY spam!\" ) We won't talk much about conditionals until later, but, even if you've never coded before, you can probably guess what this does. Python is prized for its readability and the simplicity of its syntax (with some going as far as to call it \"executable pseudocode\"). Note how we indicated which code belongs to the if . \"But I don't want ANY spam!\" is only supposed to be printed if spam_amount is positive. But the later code (like print(viking_song) ) should be executed no matter what. How do we (and Python) know that? The colon ( : ) at the end of the if line indicates that a new \"code block\" is coming up. Subsequent lines which are indented (beginning with an extra 4 spaces) are part of that code block. You may be familiar with other languages which use { curly braces } to mark the beginning and end of code blocks. Python's use of meaningful whitespace often is surprising to programmers who are accustomed to other languages, but in practice it can lead to more consistent and readable code than languages that do not enforce indentation of code blocks. The later lines dealing with viking_song are not indented with an extra 4 spaces, so they're not a part of the if 's code block. We'll see more examples of indented code blocks later when we start defining functions and using loops. This code snippet is also our first sighting of a string in Python: 1 2 \"But I don 't want ANY spam!\" Strings can be marked either by double or single quotation marks. (But because this particular string contains a single-quote character, we might confuse Python by trying to surround it with single-quotes, unless we're careful.) 1 2 viking_song = \"Spam \" * spam_amount print ( viking_song ) The * operator can be used to multiply two numbers ( 3 * 3 evaluates to 9), but amusingly enough, we can also multiply a string by a number, to get a version that's been repeated that many times. Python offers a number of cheeky little time-saving tricks like this where operators like * and + have a different meaning depending on what kind of thing they're applied to. (The technical term for this is operator overloading ) Numbers and arithmetic in Python \u00b6 We've already seen an example of a variable containing a number above: 1 spam_amount = 0 \"Number\" is a fine informal name for the kind of thing, but if we wanted to be more technical, we could ask Python how it would describe the type of thing that spam_amount is: 1 type ( spam_amount ) It's an int - short for integer. There's another sort of number we commonly encounter in Python: 1 type ( 19.95 ) A float is a number with a decimal place - very useful for representing things like weights or proportions. type() is the second built-in function we've seen (after print() ), and it's another good one to remember. It's very useful to be able to ask Python \"what kind of thing is this?\". A natural thing to want to do with numbers is perform arithmetic. We've seen the + operator for addition, and the * operator for multiplication (of a sort). Python also has us covered for the rest of the basic buttons on your calculator: | Operator | Name | Description | |--------------|----------------|--------------------------------------------------------| | a + b | Addition | Sum of a and b | | a - b | Subtraction | Difference of a and b | | a * b | Multiplication | Product of a and b | | a / b | True division | Quotient of a and b | | a // b | Floor division | Quotient of a and b , removing fractional parts | | a % b | Modulus | Integer remainder after division of a by b | | a ** b | Exponentiation | a raised to the power of b | | -a | Negation | The negative of a | hack One interesting observation here is that, whereas your calculator probably just has one button for division, Python can do two kinds. \"True division\" is basically what your calculator does: 1 2 print ( 5 / 2 ) print ( 6 / 2 ) It always gives us a float . The // operator gives us a result that's rounded down to the next integer. 1 2 print ( 5 // 2 ) print ( 6 // 2 ) Can you think of where this would be useful? You may see an example soon in the coding problems. Order of operations \u00b6 The arithmetic we learned in primary school has conventions about the order in which operations are evaluated. Some remember these by a mnemonic such as PEMDAS - **P**arentheses, **E**xponents, **M**ultiplication/**D**ivision, **A**ddition/**S**ubtraction. Python follows similar rules about which calculations to perform first. They're mostly pretty intuitive. 1 8 - 3 + 2 1 - 3 + 4 * 2 Sometimes the default order of operations isn't what we want: 1 2 3 4 5 hat_height_cm = 25 my_height_cm = 190 # How tall am I, in meters, when wearing my hat? total_height_meters = hat_height_cm + my_height_cm / 100 print ( \"Height in meters =\" , total_height_meters , \"?\" ) Parentheses are your trump card. You can add them to force Python to evaluate sub-expressions in a different order (or just to make your code easier to read). 1 2 total_height_meters = ( hat_height_cm + my_height_cm ) / 100 print ( \"Height in meters =\" , total_height_meters ) Builtin functions for working with numbers \u00b6 min and max return the minimum and maximum of their arguments, respectively... 1 2 print ( min ( 1 , 2 , 3 )) print ( max ( 1 , 2 , 3 )) abs returns the absolute value of it argument: 1 2 print ( abs ( 32 )) print ( abs ( - 32 )) In addition to being the names of Python's two main numerical types, int and float can also be called as functions which convert their arguments to the corresponding type: 1 2 3 4 print ( float ( 10 )) print ( int ( 3.33 )) # They can even be called on strings! print ( int ( '807' ) + 1 ) Your turn! \u00b6 Head over to the Exercises notebook to get some hands-on practice writing Python.","title":"Markdown"},{"location":"output/#hello-python","text":"Python was named for the British comedy troupe Monty Python , so why not make our first Python program an homage to their famous [Spam]( https://en.wikipedia.org/wiki/Spam_(Monty_Python%29 ) skit? Just for fun, try reading over the code below and predicting what it's going to do when run. (If you have no idea, that's fine!) Then click the \"output\" button to see the results of our program. 1 2 3 4 5 6 7 8 9 10 11 spam_amount = 0 print ( spam_amount ) # Ordering Spam, egg, Spam, Spam, bacon and Spam (4 more servings of Spam) spam_amount = spam_amount + 4 if spam_amount > 0 : print ( \"But I don't want ANY spam!\" ) viking_song = \"Spam \" * spam_amount print ( viking_song ) There's a lot to unpack here! This silly program demonstrates many important aspects of what Python code looks like (its syntax ) and how it works (its semantics ). Let's run down the code from top to bottom. 1 spam_amount = 0 Variable assignment! Here we create a variable called spam_amount and assign it the value of 0 using = , Python's assignment operator. Aside : If you've programmed in certain other languages (like Java or C++), you might be noticing some things Python doesn't require us to do here: - we don't need to \"declare\" spam_amount before assigning to it - we don't need to tell Python what type of value spam_amount is going to refer to. In fact, we can even go on to reassign spam_amount to refer to a different sort of thing like a string or a boolean. 1 print ( spam_amount ) A function call . print is an extremely useful builtin Python function that displays the value passed to it on the screen. We call functions by putting parentheses after their name, with the inputs to the function (or arguments ) in between. 1 2 # Ordering Spam, egg, Spam, Spam, bacon and Spam (4 more servings of Spam) spam_amount = spam_amount + 4 The first line above is a comment . In Python, comments begin with the # symbol. Next we see an example of reassignment. Reassigning the value of an existing variable looks just the same as creating a variable - it still uses the = assignment operator. In this case, the value we're assigning to spam_amount involves a little simple arithmetic on its previous value. When it encounters this line, Python evaluates the expression on the right-hand-side of the = (0 + 4 = 4), and then assigns that value to the variable on the left- hand-side. 1 2 if spam_amount > 0 : print ( \"But I don't want ANY spam!\" ) We won't talk much about conditionals until later, but, even if you've never coded before, you can probably guess what this does. Python is prized for its readability and the simplicity of its syntax (with some going as far as to call it \"executable pseudocode\"). Note how we indicated which code belongs to the if . \"But I don't want ANY spam!\" is only supposed to be printed if spam_amount is positive. But the later code (like print(viking_song) ) should be executed no matter what. How do we (and Python) know that? The colon ( : ) at the end of the if line indicates that a new \"code block\" is coming up. Subsequent lines which are indented (beginning with an extra 4 spaces) are part of that code block. You may be familiar with other languages which use { curly braces } to mark the beginning and end of code blocks. Python's use of meaningful whitespace often is surprising to programmers who are accustomed to other languages, but in practice it can lead to more consistent and readable code than languages that do not enforce indentation of code blocks. The later lines dealing with viking_song are not indented with an extra 4 spaces, so they're not a part of the if 's code block. We'll see more examples of indented code blocks later when we start defining functions and using loops. This code snippet is also our first sighting of a string in Python: 1 2 \"But I don 't want ANY spam!\" Strings can be marked either by double or single quotation marks. (But because this particular string contains a single-quote character, we might confuse Python by trying to surround it with single-quotes, unless we're careful.) 1 2 viking_song = \"Spam \" * spam_amount print ( viking_song ) The * operator can be used to multiply two numbers ( 3 * 3 evaluates to 9), but amusingly enough, we can also multiply a string by a number, to get a version that's been repeated that many times. Python offers a number of cheeky little time-saving tricks like this where operators like * and + have a different meaning depending on what kind of thing they're applied to. (The technical term for this is operator overloading )","title":"Hello, Python!"},{"location":"output/#numbers-and-arithmetic-in-python","text":"We've already seen an example of a variable containing a number above: 1 spam_amount = 0 \"Number\" is a fine informal name for the kind of thing, but if we wanted to be more technical, we could ask Python how it would describe the type of thing that spam_amount is: 1 type ( spam_amount ) It's an int - short for integer. There's another sort of number we commonly encounter in Python: 1 type ( 19.95 ) A float is a number with a decimal place - very useful for representing things like weights or proportions. type() is the second built-in function we've seen (after print() ), and it's another good one to remember. It's very useful to be able to ask Python \"what kind of thing is this?\". A natural thing to want to do with numbers is perform arithmetic. We've seen the + operator for addition, and the * operator for multiplication (of a sort). Python also has us covered for the rest of the basic buttons on your calculator: | Operator | Name | Description | |--------------|----------------|--------------------------------------------------------| | a + b | Addition | Sum of a and b | | a - b | Subtraction | Difference of a and b | | a * b | Multiplication | Product of a and b | | a / b | True division | Quotient of a and b | | a // b | Floor division | Quotient of a and b , removing fractional parts | | a % b | Modulus | Integer remainder after division of a by b | | a ** b | Exponentiation | a raised to the power of b | | -a | Negation | The negative of a | hack One interesting observation here is that, whereas your calculator probably just has one button for division, Python can do two kinds. \"True division\" is basically what your calculator does: 1 2 print ( 5 / 2 ) print ( 6 / 2 ) It always gives us a float . The // operator gives us a result that's rounded down to the next integer. 1 2 print ( 5 // 2 ) print ( 6 // 2 ) Can you think of where this would be useful? You may see an example soon in the coding problems.","title":"Numbers and arithmetic in Python"},{"location":"output/#order-of-operations","text":"The arithmetic we learned in primary school has conventions about the order in which operations are evaluated. Some remember these by a mnemonic such as PEMDAS - **P**arentheses, **E**xponents, **M**ultiplication/**D**ivision, **A**ddition/**S**ubtraction. Python follows similar rules about which calculations to perform first. They're mostly pretty intuitive. 1 8 - 3 + 2 1 - 3 + 4 * 2 Sometimes the default order of operations isn't what we want: 1 2 3 4 5 hat_height_cm = 25 my_height_cm = 190 # How tall am I, in meters, when wearing my hat? total_height_meters = hat_height_cm + my_height_cm / 100 print ( \"Height in meters =\" , total_height_meters , \"?\" ) Parentheses are your trump card. You can add them to force Python to evaluate sub-expressions in a different order (or just to make your code easier to read). 1 2 total_height_meters = ( hat_height_cm + my_height_cm ) / 100 print ( \"Height in meters =\" , total_height_meters )","title":"Order of operations"},{"location":"output/#builtin-functions-for-working-with-numbers","text":"min and max return the minimum and maximum of their arguments, respectively... 1 2 print ( min ( 1 , 2 , 3 )) print ( max ( 1 , 2 , 3 )) abs returns the absolute value of it argument: 1 2 print ( abs ( 32 )) print ( abs ( - 32 )) In addition to being the names of Python's two main numerical types, int and float can also be called as functions which convert their arguments to the corresponding type: 1 2 3 4 print ( float ( 10 )) print ( int ( 3.33 )) # They can even be called on strings! print ( int ( '807' ) + 1 )","title":"Builtin functions for working with numbers"},{"location":"output/#your-turn","text":"Head over to the Exercises notebook to get some hands-on practice writing Python.","title":"Your turn!"},{"location":"Contact/about/","text":"Mohsin Mahmood \u00b6 We help our customers reduce their revenue streams, increase their bottom line productivity through advanced web development + data science solutions. Our staff provides an opportunity to find innovative ways to strategically analyze and optimize operations when learning new market perspectives. We are one of the top data science companies in Pakistan that offers unique advantages. Developer \u00b6 Muhammad Mohsin Email: mohsinmahmoodmdl@gmail.com Github Profile: Github Contact Me \u00b6 Business Hour : Monday \u2013 Friday : 9am to 5pm Address : COMSATS University Lahore E-mail : mohsinmahmood.mdl@gmail.com Contact Info : (92) 3336373467 , (92) 3336373467","title":"About"},{"location":"Contact/about/#mohsin-mahmood","text":"We help our customers reduce their revenue streams, increase their bottom line productivity through advanced web development + data science solutions. Our staff provides an opportunity to find innovative ways to strategically analyze and optimize operations when learning new market perspectives. We are one of the top data science companies in Pakistan that offers unique advantages.","title":"Mohsin Mahmood"},{"location":"Contact/about/#developer","text":"Muhammad Mohsin Email: mohsinmahmoodmdl@gmail.com Github Profile: Github","title":"Developer"},{"location":"Contact/about/#contact-me","text":"Business Hour : Monday \u2013 Friday : 9am to 5pm Address : COMSATS University Lahore E-mail : mohsinmahmood.mdl@gmail.com Contact Info : (92) 3336373467 , (92) 3336373467","title":"Contact Me"},{"location":"Contact/ass2/","text":"Examples of Structural pattern in core Java libraries: \u00b6 Facade Design Pattern \u00b6 javax.faces.context.ExternalContext \u00b6 Java Server Faces (JSF) is a Java-based web application framework intended to simplify development integration of web-based user interfaces This class allows the Faces API to be unaware of the nature of its containing application environment. In particular, this class allows JavaServer Faces based appications to run in either a Servlet or a Portlet environment. Servlets can render complete web pages, whereas portlets renders html fragments. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /** *Returns the servlet context object from the FacesContext * * @param context * @return */ private Object _getServletContextFromFacesContext ( FacesContext context ) { ExternalContext ec = null ; Object sc = null ; if ( context != null ) { ec = context . getExternalContext (); if ( ec != null ) { sc = ec . getContext (); } } return sc ; } Flyweight Design Pattern \u00b6 Libraries use flyweight java.lang.Integer.valueOf(int) \u00b6 Also use with Boolean, Byte, Character, Short, Long, BigDecimal The Flyweight pattern has a single purpose: minimizing memory intake. If your program doesn\u2019t struggle with a shortage of RAM, then you might just ignore this pattern for a while. If you call the method twice with the same argument, it may return the same object thereby limiting the memory usage. This fits the definition of flyweight pattern. If we look at the source for valueOf, we can get a hint: Source of java.lang.Integer: 1 2 3 4 5 6 public static Integer valueOf ( int i ) { assert IntegerCache . high >= 127 ; if ( i >= IntegerCache . low && i <= IntegerCache . high ) return IntegerCache . cache [ i + ( - IntegerCache . low ) ] ; return new Integer ( i ); } Adapter Design Pattern \u00b6 Java Libraries use Adapter Design Pattern - java.util.Arrays#asList() - java.util.Collections#list( ) - java.util.Collections#enumeration() - java.io.InputStreamReader(InputStream) (returns a Reader object) The Adapter pattern is pretty common in Java code. It\u2019s very often used in systems based on some legacy code. In such cases, Adapters make legacy code with modern classes. The asList() method of java.util.Arrays class is used to return a fixed-size list backed by the specified array. 1 2 3 4 5 6 7 8 // creating Arrays of String type String a [] = new String [] { \"A\" , \"B\" , \"C\" , \"D\" }; // getting the list view of Array List < String > list = Arrays . asList ( a ); // printing the list System . out . println ( \"The list is: \" + list ); Output: The list is: [A, B, C, D] Decorator Design Pattern \u00b6 Decorator in Java All subclasses of java.io.InputStream , OutputStream , Reader and Writer have constructors that accept objects of their own type. java.util.Collections methods checkedXXX() , synchronizedXXX() and unmodifiableXXX() . Checked Collections Examples \u00b6 The Collections class also provides the checkedXXX() methods that returns a dynamically typesafe view of the specified collection. Consider an example. The following statements create a checked list and pass it to a third-party library method: 1 2 3 List < String > listNames = Collections . checkedList ( new ArrayList <> (), String . class ); thirdpartyMethod ( listNames ); Suppose that the third-party library method is written like this: 1 2 3 4 5 6 public void thirdpartyMethod ( List list ) { list . add ( \"Tom\" ); // ok list . add ( \"Tom\" ); // ok list . add ( 123 ); // throws ClassCastException }","title":"Assignment"},{"location":"Contact/ass2/#examples-of-structural-pattern-in-core-java-libraries","text":"","title":"Examples of Structural pattern in core Java libraries:"},{"location":"Contact/ass2/#facade-design-pattern","text":"","title":"Facade Design Pattern"},{"location":"Contact/ass2/#javaxfacescontextexternalcontext","text":"Java Server Faces (JSF) is a Java-based web application framework intended to simplify development integration of web-based user interfaces This class allows the Faces API to be unaware of the nature of its containing application environment. In particular, this class allows JavaServer Faces based appications to run in either a Servlet or a Portlet environment. Servlets can render complete web pages, whereas portlets renders html fragments. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /** *Returns the servlet context object from the FacesContext * * @param context * @return */ private Object _getServletContextFromFacesContext ( FacesContext context ) { ExternalContext ec = null ; Object sc = null ; if ( context != null ) { ec = context . getExternalContext (); if ( ec != null ) { sc = ec . getContext (); } } return sc ; }","title":"javax.faces.context.ExternalContext"},{"location":"Contact/ass2/#flyweight-design-pattern","text":"Libraries use flyweight","title":"Flyweight Design Pattern"},{"location":"Contact/ass2/#javalangintegervalueofint","text":"Also use with Boolean, Byte, Character, Short, Long, BigDecimal The Flyweight pattern has a single purpose: minimizing memory intake. If your program doesn\u2019t struggle with a shortage of RAM, then you might just ignore this pattern for a while. If you call the method twice with the same argument, it may return the same object thereby limiting the memory usage. This fits the definition of flyweight pattern. If we look at the source for valueOf, we can get a hint: Source of java.lang.Integer: 1 2 3 4 5 6 public static Integer valueOf ( int i ) { assert IntegerCache . high >= 127 ; if ( i >= IntegerCache . low && i <= IntegerCache . high ) return IntegerCache . cache [ i + ( - IntegerCache . low ) ] ; return new Integer ( i ); }","title":"java.lang.Integer.valueOf(int)"},{"location":"Contact/ass2/#adapter-design-pattern","text":"Java Libraries use Adapter Design Pattern - java.util.Arrays#asList() - java.util.Collections#list( ) - java.util.Collections#enumeration() - java.io.InputStreamReader(InputStream) (returns a Reader object) The Adapter pattern is pretty common in Java code. It\u2019s very often used in systems based on some legacy code. In such cases, Adapters make legacy code with modern classes. The asList() method of java.util.Arrays class is used to return a fixed-size list backed by the specified array. 1 2 3 4 5 6 7 8 // creating Arrays of String type String a [] = new String [] { \"A\" , \"B\" , \"C\" , \"D\" }; // getting the list view of Array List < String > list = Arrays . asList ( a ); // printing the list System . out . println ( \"The list is: \" + list ); Output: The list is: [A, B, C, D]","title":"Adapter Design Pattern"},{"location":"Contact/ass2/#decorator-design-pattern","text":"Decorator in Java All subclasses of java.io.InputStream , OutputStream , Reader and Writer have constructors that accept objects of their own type. java.util.Collections methods checkedXXX() , synchronizedXXX() and unmodifiableXXX() .","title":"Decorator Design Pattern"},{"location":"Contact/ass2/#checked-collections-examples","text":"The Collections class also provides the checkedXXX() methods that returns a dynamically typesafe view of the specified collection. Consider an example. The following statements create a checked list and pass it to a third-party library method: 1 2 3 List < String > listNames = Collections . checkedList ( new ArrayList <> (), String . class ); thirdpartyMethod ( listNames ); Suppose that the third-party library method is written like this: 1 2 3 4 5 6 public void thirdpartyMethod ( List list ) { list . add ( \"Tom\" ); // ok list . add ( \"Tom\" ); // ok list . add ( 123 ); // throws ClassCastException }","title":"Checked Collections Examples"},{"location":"current/upgenics/jaeger/jaeger101/","text":"Implementing Jaeger Tracing \u00b6 Adding Service Name \u00b6 1 service_name = \"ShortlistCadidatesForJobAPI\" Files to exclude Api.py, jaegerTracing.py, registrator.py Importing Libraries \u00b6 Flask API Tracing \u00b6 Automated Traces All Routes \u00b6 1 2 3 4 5 # Distributed Tracing import jaegerTracing tracer = jaegerTracing . getTracerInstance () from flask_opentracing import FlaskTracing tracing = FlaskTracing ( tracer , True , app ) Import Libraries via Regrx \u00b6 Regex Pattern 1 cors = CORS\\(app, resources=\\{r\"/\\*\": \\{\"origins\": \"\\*\"\\}\\}\\) Regex Pattern 1 2 3 4 5 6 7 cors = CORS(app, resources={r\"/*\": {\"origins\": \"*\"}}) # Distributed Tracing import jaegerTracing tracer = jaegerTracing.getTracerInstance() from flask_opentracing import FlaskTracing tracing = FlaskTracing(tracer, True, app) Batch Editing in Client files \u00b6 Import Libraries without Regex \u00b6 1 2 3 4 5 # Distributed Tracing from opentracing_instrumentation.request_context import get_current_span , span_in_context import jaegerTracing tracer = jaegerTracing . getTracerInstance () from opentracing.propagation import Format Import Libraries via Regrx \u00b6 Regex Pattern 1 class\\s\\w*\\(\\): Regex Pattern 1 2 3 4 5 6 7 # Distributed Tracing from opentracing_instrumentation.request_context import get_current_span, span_in_context import jaegerTracing tracer = jaegerTracing.getTracerInstance() from opentracing.propagation import Format $0 Injecting Spans \u00b6 Methods with try-except (Without Class) \u00b6 Caution When you put the following opentracing implementaion the code mush below should reindent towards right by 4 space (1 Tab). Hint Add jaeger imports -- to the files with no class Regex Pattern 1 2 \\n(def\\s([\\w]+)\\s?\\(self,*\\s*([\\w,\\s=']*)\\)\\s*:)\\s* (try:) Regex Pattern 1 2 3 4 5 $1 $4 span_ctx = tracer.extract(format=Format.TEXT_MAP, carrier={}) with tracer.start_active_span('$2', child_of=span_ctx) as scope: scope.span.set_tag('args', [$3]) Methods without try-except \u00b6 Regex Pattern 1 \\n(def\\s([\\w]+)\\s?\\(self,*\\s*([\\w,\\s=']*)\\)\\s*:) Regex Pattern 1 2 3 4 $1 span_ctx = tracer.extract(format=Format.TEXT_MAP, carrier={}) with tracer.start_active_span('$2', child_of=span_ctx) as scope: scope.span.set_tag('args', [$3]) Methods with try-except \u00b6 Regex Pattern 1 2 ( )(def\\s([\\w]+)\\s?\\(self,*\\s*([\\w,\\s=']*)\\)\\s*:)\\s* (try:) Regex Pattern 1 2 3 4 5 $2 $5 span_ctx = tracer.extract(format=Format.TEXT_MAP, carrier={}) with tracer.start_active_span('$3', child_of=span_ctx) as scope: scope.span.set_tag('args', [$4]) Methods without try-except \u00b6 Regex Pattern 1 ( )(def\\s([\\w]+)\\s?\\(self,*\\s*([\\w,\\s=']*)\\)\\s*:) Regex Pattern 1 2 3 4 $2 span_ctx = tracer.extract(format=Format.TEXT_MAP, carrier={}) with tracer.start_active_span('$3', child_of=span_ctx) as scope: scope.span.set_tag('args', [$4]) Caution Indentation of the file reduces the starting spaces upto 4 spaces with cause except to deviate from consective try . You should have to replace the spaces accouding to the starting try block. Handling Exception \u00b6 Regex Pattern 1 (\\s*)except Exception as ex: Regex Pattern 1 2 $0 $1scope.span.set_tag('Exception', ex) Handling Return Statuses \u00b6 Tip Make sure regex button is pressed in vscode search field. 01 - Return Variable Names \u00b6 Regex Pattern 1 (\\s*)return jsonify\\(([\\w]*)\\) Regex Pattern 1 $1scope.span.set_tag('response', $2)$0 02 - Return Strings \u00b6 JSON String Regex Pattern 1 (\\s*)return jsonify\\(\"([\\w\\s]*)\"\\) Regex Pattern 1 $1scope.span.set_tag('response', '$2')$0 Simple String Regex Pattern 1 (\\s*)return\\s*[\"']([\\w\\s]*)['\"] Regex Pattern 1 $1scope.span.set_tag('response', \"$2\")$0 03 - Return Json Data \u00b6 Regex Pattern 1 (\\s*)return jsonify\\(\\{(['\\w:,\\s\\[\\].+\"\\(\\)]*)\\}\\) Regex Pattern 1 $1scope.span.set_tag('response', dict({$2}))$0 04 - Return Graph Database Collections Query \u00b6 Regex Pattern 1 (\\s*)return list\\(self\\.Collection\\.find\\((\\w*) Regex Pattern 1 $1scope.span.set_tag('response', $2)$0 Hint add the following snippet 1 self.graph.run 05 - Return response.json() \u00b6 Regex Pattern 1 (\\s*)return response\\.json\\(\\) Regex Pattern 1 2 $1scope.span.set_tag('response', response.json()) $0 06 - Return True/False \u00b6 Regex Pattern 1 (\\s*)return True 1 2 $1scope.span.set_tag('response', 'True') $0 Regex Pattern 1 (\\s*)return False 1 2 $1scope.span.set_tag('response', 'False') $0 07 - Adding Print logging to jaeger \u00b6 Regex Pattern 1 ([\\s]*)print\\(([\"'][\\w\\s:.\"]*[+\\sstr\\(\\w\\)]*)\\)\\n 1 $1scope.span.set_tag(\"log\", $2)$0 Keywords Used in All APIS \u00b6 args response query log RPC Inject/Extract Calls Regex \u00b6 Injecting Spans Replacement \u00b6 Hint Do not include url with KONG calling Regex Pattern 1 ([\\s]*)response\\s*=\\s*requests. Regex Pattern 1 2 3 4 5 6 7 $1#Distributed Tracing $1carrier = {\"Content-Type\": \"application/json\"} $1tracer.inject( $1 span_context=scope.span.context, $1 format=Format.TEXT_MAP, $1 carrier=carrier) $0 Regex Pattern 1 headers\\s*=\\s*\\{([\\w\\s\" '-:]*)\\} Regex Pattern 1 headers= carrier Extracting Spans Replacement \u00b6 Hint This portion is already implemented while injecting spans Regex Pattern 1 ([\\s]*)with tracer.start_active_span Regex Pattern 1 2 $1span_ctx = tracer.extract(format=Format.TEXT_MAP, carrier={}) $0 Regex Pattern 1 ) as scope: Regex Pattern 1 , child_of=span_ctx) as scope: Hint Please reindent all the files where you have done changes -- feel free to use the following snippet to searching out the files will require reindentation. Tip After applying regex, methods were reindented from their actual location, you have to manually indent the methods. Ctrl + ] Regex Pattern 1 class\\s\\w*\\(\\): Branches Created for Tracing \u00b6 Names of Branches \u00b6 1 git branch \u2714Tracing--RemaingAPIs-4\u2714 Organizational Data (revamp) \u2714Tracing--RemaingAPIs-3\u2714 Publisher_Bridge Schedular system_configuration_api system_configuration_set_jobpost_to_expire_routine top_data_api URL_meta_data_api \u2714Tracing--RemaingAPIs-2\u2714 Social company_activity_api company_activity_apis connection follow_company follow_user job_post news_feed suggested_friends url_post user_comment_on_post_web_notifications user_like_post_web_notifications user_notifications user_share_post_web_notifications \u2714Tracing--RemaingAPIs-1\u2714 profile_and_job_post_comparison_ratio_api post_seen_api Jobs_RelatedTo_Skills_Experience profile_seen_api \u2714Tracing-GDB_APIs\u2714 GDB_APIs Activity EmailLogs NewsFeed \u2714tracing_chat_api,-default-hiring--timeslot,-emailapi\u2714 ChatAPI default_hiring_procedure_for_company default_time_slot_for_company email_api \u2714Tracing-GDB_Consumers\u2714 company_bookmarks_candidate company_created company_created_job_post company_created_url_post company_data_stor company_seen_user_profile company_shared_url employee_associated_with_company GDB_Newsfeed job_application_state_chagne_notice job_application_state_email_store_to_gdb social_connect_users social_disconnect_users user_bookmarks_job_post user_created user_created_url_post user_follow_company user_job_post_like user_job_post_unlike user_seen_job_post user_seen_user_profile user_shared_job_post user_shared_url_post user_url_post_like user_url_post_unlike \u2714Tracing_skill_social\u2714 Skill_Social/endorse_skill_api Skill_Social/rate_skill_api Skill_Social/skill_comment_api Tracing_jobAPIs(all) \u2714 job_application_state_change_notice \u2714 \u2714 job_application_state_change_save \u2714 \u2714 job_application_state_change_web_notification \u2714 \u2714 job_application_state_email_log_to_mdb \u2714 \u2714 job_application_state_management_api \u2714 \u2714 job_comments_api \u2714 Tracing-bkmrk-candid,-candid-job-app-mgmt-api,-bkmrk-job-api \u2714bookmark_candidates_api\u2714 \u2714candidate_job_application_management_api\u2714 \u2714bookmark_job_api\u2714 Tracing-JobPost-API revamp_laravel_to_python_apis \u2714jobpost_python_apisjobpost_python_apis\u2714 shortlistedCandidate_tracing_with_Jaeger \u2714scheduler_api\u2714 \u2714 shortlist_candidates_api \u2714 revamp_laravel_to_python_apis \u2714 admin_operation_python_apis \u2714 \u2714 Consumer_UserName_Image_Storage \u2714 \u2714 profile_python_apis \u2714 \u2714 registeration_python_service_apis jeager_implementation_organizationalDataAPI (obsolete) organizational_data (deprecated)","title":"Jaeger 101"},{"location":"current/upgenics/jaeger/jaeger101/#implementing-jaeger-tracing","text":"","title":"Implementing Jaeger Tracing"},{"location":"current/upgenics/jaeger/jaeger101/#adding-service-name","text":"1 service_name = \"ShortlistCadidatesForJobAPI\" Files to exclude Api.py, jaegerTracing.py, registrator.py","title":"Adding Service Name"},{"location":"current/upgenics/jaeger/jaeger101/#importing-libraries","text":"","title":"Importing Libraries"},{"location":"current/upgenics/jaeger/jaeger101/#flask-api-tracing","text":"","title":"Flask API Tracing"},{"location":"current/upgenics/jaeger/jaeger101/#automated-traces-all-routes","text":"1 2 3 4 5 # Distributed Tracing import jaegerTracing tracer = jaegerTracing . getTracerInstance () from flask_opentracing import FlaskTracing tracing = FlaskTracing ( tracer , True , app )","title":"Automated Traces All Routes"},{"location":"current/upgenics/jaeger/jaeger101/#import-libraries-via-regrx","text":"Regex Pattern 1 cors = CORS\\(app, resources=\\{r\"/\\*\": \\{\"origins\": \"\\*\"\\}\\}\\) Regex Pattern 1 2 3 4 5 6 7 cors = CORS(app, resources={r\"/*\": {\"origins\": \"*\"}}) # Distributed Tracing import jaegerTracing tracer = jaegerTracing.getTracerInstance() from flask_opentracing import FlaskTracing tracing = FlaskTracing(tracer, True, app)","title":"Import Libraries via Regrx"},{"location":"current/upgenics/jaeger/jaeger101/#batch-editing-in-client-files","text":"","title":"Batch Editing in Client files"},{"location":"current/upgenics/jaeger/jaeger101/#import-libraries-without-regex","text":"1 2 3 4 5 # Distributed Tracing from opentracing_instrumentation.request_context import get_current_span , span_in_context import jaegerTracing tracer = jaegerTracing . getTracerInstance () from opentracing.propagation import Format","title":"Import Libraries without Regex"},{"location":"current/upgenics/jaeger/jaeger101/#import-libraries-via-regrx_1","text":"Regex Pattern 1 class\\s\\w*\\(\\): Regex Pattern 1 2 3 4 5 6 7 # Distributed Tracing from opentracing_instrumentation.request_context import get_current_span, span_in_context import jaegerTracing tracer = jaegerTracing.getTracerInstance() from opentracing.propagation import Format $0","title":"Import Libraries via Regrx"},{"location":"current/upgenics/jaeger/jaeger101/#injecting-spans","text":"","title":"Injecting Spans"},{"location":"current/upgenics/jaeger/jaeger101/#methods-with-try-except-without-class","text":"Caution When you put the following opentracing implementaion the code mush below should reindent towards right by 4 space (1 Tab). Hint Add jaeger imports -- to the files with no class Regex Pattern 1 2 \\n(def\\s([\\w]+)\\s?\\(self,*\\s*([\\w,\\s=']*)\\)\\s*:)\\s* (try:) Regex Pattern 1 2 3 4 5 $1 $4 span_ctx = tracer.extract(format=Format.TEXT_MAP, carrier={}) with tracer.start_active_span('$2', child_of=span_ctx) as scope: scope.span.set_tag('args', [$3])","title":"Methods with try-except (Without Class)"},{"location":"current/upgenics/jaeger/jaeger101/#methods-without-try-except","text":"Regex Pattern 1 \\n(def\\s([\\w]+)\\s?\\(self,*\\s*([\\w,\\s=']*)\\)\\s*:) Regex Pattern 1 2 3 4 $1 span_ctx = tracer.extract(format=Format.TEXT_MAP, carrier={}) with tracer.start_active_span('$2', child_of=span_ctx) as scope: scope.span.set_tag('args', [$3])","title":"Methods without try-except"},{"location":"current/upgenics/jaeger/jaeger101/#methods-with-try-except","text":"Regex Pattern 1 2 ( )(def\\s([\\w]+)\\s?\\(self,*\\s*([\\w,\\s=']*)\\)\\s*:)\\s* (try:) Regex Pattern 1 2 3 4 5 $2 $5 span_ctx = tracer.extract(format=Format.TEXT_MAP, carrier={}) with tracer.start_active_span('$3', child_of=span_ctx) as scope: scope.span.set_tag('args', [$4])","title":"Methods with try-except"},{"location":"current/upgenics/jaeger/jaeger101/#methods-without-try-except_1","text":"Regex Pattern 1 ( )(def\\s([\\w]+)\\s?\\(self,*\\s*([\\w,\\s=']*)\\)\\s*:) Regex Pattern 1 2 3 4 $2 span_ctx = tracer.extract(format=Format.TEXT_MAP, carrier={}) with tracer.start_active_span('$3', child_of=span_ctx) as scope: scope.span.set_tag('args', [$4]) Caution Indentation of the file reduces the starting spaces upto 4 spaces with cause except to deviate from consective try . You should have to replace the spaces accouding to the starting try block.","title":"Methods without try-except"},{"location":"current/upgenics/jaeger/jaeger101/#handling-exception","text":"Regex Pattern 1 (\\s*)except Exception as ex: Regex Pattern 1 2 $0 $1scope.span.set_tag('Exception', ex)","title":"Handling Exception"},{"location":"current/upgenics/jaeger/jaeger101/#handling-return-statuses","text":"Tip Make sure regex button is pressed in vscode search field.","title":"Handling Return Statuses"},{"location":"current/upgenics/jaeger/jaeger101/#01-return-variable-names","text":"Regex Pattern 1 (\\s*)return jsonify\\(([\\w]*)\\) Regex Pattern 1 $1scope.span.set_tag('response', $2)$0","title":"01 - Return Variable Names"},{"location":"current/upgenics/jaeger/jaeger101/#02-return-strings","text":"JSON String Regex Pattern 1 (\\s*)return jsonify\\(\"([\\w\\s]*)\"\\) Regex Pattern 1 $1scope.span.set_tag('response', '$2')$0 Simple String Regex Pattern 1 (\\s*)return\\s*[\"']([\\w\\s]*)['\"] Regex Pattern 1 $1scope.span.set_tag('response', \"$2\")$0","title":"02 - Return Strings"},{"location":"current/upgenics/jaeger/jaeger101/#03-return-json-data","text":"Regex Pattern 1 (\\s*)return jsonify\\(\\{(['\\w:,\\s\\[\\].+\"\\(\\)]*)\\}\\) Regex Pattern 1 $1scope.span.set_tag('response', dict({$2}))$0","title":"03 - Return Json Data"},{"location":"current/upgenics/jaeger/jaeger101/#04-return-graph-database-collections-query","text":"Regex Pattern 1 (\\s*)return list\\(self\\.Collection\\.find\\((\\w*) Regex Pattern 1 $1scope.span.set_tag('response', $2)$0 Hint add the following snippet 1 self.graph.run","title":"04 - Return Graph Database Collections Query"},{"location":"current/upgenics/jaeger/jaeger101/#05-return-responsejson","text":"Regex Pattern 1 (\\s*)return response\\.json\\(\\) Regex Pattern 1 2 $1scope.span.set_tag('response', response.json()) $0","title":"05 - Return response.json()"},{"location":"current/upgenics/jaeger/jaeger101/#06-return-truefalse","text":"Regex Pattern 1 (\\s*)return True 1 2 $1scope.span.set_tag('response', 'True') $0 Regex Pattern 1 (\\s*)return False 1 2 $1scope.span.set_tag('response', 'False') $0","title":"06 - Return True/False"},{"location":"current/upgenics/jaeger/jaeger101/#07-adding-print-logging-to-jaeger","text":"Regex Pattern 1 ([\\s]*)print\\(([\"'][\\w\\s:.\"]*[+\\sstr\\(\\w\\)]*)\\)\\n 1 $1scope.span.set_tag(\"log\", $2)$0","title":"07 - Adding Print logging to jaeger"},{"location":"current/upgenics/jaeger/jaeger101/#keywords-used-in-all-apis","text":"args response query log","title":"Keywords Used in All APIS"},{"location":"current/upgenics/jaeger/jaeger101/#rpc-injectextract-calls-regex","text":"","title":"RPC Inject/Extract Calls Regex"},{"location":"current/upgenics/jaeger/jaeger101/#injecting-spans-replacement","text":"Hint Do not include url with KONG calling Regex Pattern 1 ([\\s]*)response\\s*=\\s*requests. Regex Pattern 1 2 3 4 5 6 7 $1#Distributed Tracing $1carrier = {\"Content-Type\": \"application/json\"} $1tracer.inject( $1 span_context=scope.span.context, $1 format=Format.TEXT_MAP, $1 carrier=carrier) $0 Regex Pattern 1 headers\\s*=\\s*\\{([\\w\\s\" '-:]*)\\} Regex Pattern 1 headers= carrier","title":"Injecting Spans Replacement"},{"location":"current/upgenics/jaeger/jaeger101/#extracting-spans-replacement","text":"Hint This portion is already implemented while injecting spans Regex Pattern 1 ([\\s]*)with tracer.start_active_span Regex Pattern 1 2 $1span_ctx = tracer.extract(format=Format.TEXT_MAP, carrier={}) $0 Regex Pattern 1 ) as scope: Regex Pattern 1 , child_of=span_ctx) as scope: Hint Please reindent all the files where you have done changes -- feel free to use the following snippet to searching out the files will require reindentation. Tip After applying regex, methods were reindented from their actual location, you have to manually indent the methods. Ctrl + ] Regex Pattern 1 class\\s\\w*\\(\\):","title":"Extracting Spans Replacement"},{"location":"current/upgenics/jaeger/jaeger101/#branches-created-for-tracing","text":"","title":"Branches Created for Tracing"},{"location":"current/upgenics/jaeger/jaeger101/#names-of-branches","text":"1 git branch \u2714Tracing--RemaingAPIs-4\u2714 Organizational Data (revamp) \u2714Tracing--RemaingAPIs-3\u2714 Publisher_Bridge Schedular system_configuration_api system_configuration_set_jobpost_to_expire_routine top_data_api URL_meta_data_api \u2714Tracing--RemaingAPIs-2\u2714 Social company_activity_api company_activity_apis connection follow_company follow_user job_post news_feed suggested_friends url_post user_comment_on_post_web_notifications user_like_post_web_notifications user_notifications user_share_post_web_notifications \u2714Tracing--RemaingAPIs-1\u2714 profile_and_job_post_comparison_ratio_api post_seen_api Jobs_RelatedTo_Skills_Experience profile_seen_api \u2714Tracing-GDB_APIs\u2714 GDB_APIs Activity EmailLogs NewsFeed \u2714tracing_chat_api,-default-hiring--timeslot,-emailapi\u2714 ChatAPI default_hiring_procedure_for_company default_time_slot_for_company email_api \u2714Tracing-GDB_Consumers\u2714 company_bookmarks_candidate company_created company_created_job_post company_created_url_post company_data_stor company_seen_user_profile company_shared_url employee_associated_with_company GDB_Newsfeed job_application_state_chagne_notice job_application_state_email_store_to_gdb social_connect_users social_disconnect_users user_bookmarks_job_post user_created user_created_url_post user_follow_company user_job_post_like user_job_post_unlike user_seen_job_post user_seen_user_profile user_shared_job_post user_shared_url_post user_url_post_like user_url_post_unlike \u2714Tracing_skill_social\u2714 Skill_Social/endorse_skill_api Skill_Social/rate_skill_api Skill_Social/skill_comment_api Tracing_jobAPIs(all) \u2714 job_application_state_change_notice \u2714 \u2714 job_application_state_change_save \u2714 \u2714 job_application_state_change_web_notification \u2714 \u2714 job_application_state_email_log_to_mdb \u2714 \u2714 job_application_state_management_api \u2714 \u2714 job_comments_api \u2714 Tracing-bkmrk-candid,-candid-job-app-mgmt-api,-bkmrk-job-api \u2714bookmark_candidates_api\u2714 \u2714candidate_job_application_management_api\u2714 \u2714bookmark_job_api\u2714 Tracing-JobPost-API revamp_laravel_to_python_apis \u2714jobpost_python_apisjobpost_python_apis\u2714 shortlistedCandidate_tracing_with_Jaeger \u2714scheduler_api\u2714 \u2714 shortlist_candidates_api \u2714 revamp_laravel_to_python_apis \u2714 admin_operation_python_apis \u2714 \u2714 Consumer_UserName_Image_Storage \u2714 \u2714 profile_python_apis \u2714 \u2714 registeration_python_service_apis jeager_implementation_organizationalDataAPI (obsolete) organizational_data (deprecated)","title":"Names of Branches"},{"location":"current/upgenics/jaeger/jaegerRPC/","text":"HTTP and RPC calls with Jaegers \u00b6 HTTP Calls \u00b6 Client Files \u00b6 ``` python tab=\"API.py\" from flask import Flask, request from flask import jsonify from flask_cors import CORS import requests import json import registrator from JaegerInjectAPI import TestInject app = Flask( name ) cors = CORS(app, resources={r\"/ \": {\"origins\": \" \"}}) Connection to models \u00b6 JaegerInjectAPI_Provider = TestInject() Distributed Tracing \u00b6 import jaegerTracing tracer = jaegerTracing.getTracerInstance() from flask_opentracing import FlaskTracing tracing = FlaskTracing(tracer, True, app) @app .route('/inject', methods=['GET']) def testjaegerInject(): try: application_status = JaegerInjectAPI_Provider.injectSpan() return str(application_status) except Exception as ex: return jsonify(str(ex)), 500 if name == ' main ': app.run(host='0.0.0.0') 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ``` python tab=\"JaegerInjectAPI.py\" import json from flask import jsonify import requests # Distributed Tracing from opentracing_instrumentation.request_context import get_current_span, span_in_context import jaegerTracing tracer = jaegerTracing.getTracerInstance() from opentracing.propagation import Format class TestInject(): def injectSpan(self): with tracer.start_active_span('injectSpan') as scope: scope.span.set_tag(\"args\", \"I hope you will see me in server side\") # Distributed Tracing with Jaeger carrier = {\"Content-Type\": \"application/json\"} tracer.inject( span_context=scope.span.context, format=Format.TEXT_MAP, carrier=carrier) url = 'http://jaegerextract:5000/extract' # url = 'http://localhost:6570/company/searchByName' data = json.dumps({'keyword':\"Mohsin\"}) response = requests.get(url, data = data, headers = carrier) return response Server Files \u00b6 ``` python tab=\"API.py\" from flask import Flask, request from flask import jsonify from flask_cors import CORS import requests import json import registrator from JaegerExtractAPI import TestExtract app = Flask( name ) cors = CORS(app, resources={r\"/ \": {\"origins\": \" \"}}) Connection to models \u00b6 TestExtract_Provider = TestExtract() Distributed Tracing \u00b6 import jaegerTracing tracer = jaegerTracing.getTracerInstance() from flask_opentracing import FlaskTracing tracing = FlaskTracing(tracer, True, app) @app .route('/extract', methods=['GET']) def testjaegerExtract(): try: application_status = TestExtract_Provider.extractSpan() return \"server1\" except Exception as ex: return jsonify(str(ex)), 500 if name == ' main ': app.run(host='0.0.0.0') 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 ``` python tab=\"JaegerExtactAPI.py\" import pymongo from datetime import datetime import pika import json from flask import jsonify from bson.objectid import ObjectId # Distributed Tracing from opentracing_instrumentation.request_context import get_current_span, span_in_context import jaegerTracing tracer = jaegerTracing.getTracerInstance() from opentracing.propagation import Format class TestExtract(): def extractSpan(self): span_ctx = tracer.extract(format=Format.TEXT_MAP, carrier={}) with tracer.start_active_span(operation_name='extractSpan', child_of=span_ctx) as scope: scope.span.set_tag('args', 'input values here') return \"Server2 Useful Code Snippets \u00b6 Client side \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 # Distributed Tracing with Jaeger carrier = { \"Content-Type\" : \"application/json\" } tracer . inject ( span_context = scope . span . context , format = Format . TEXT_MAP , carrier = carrier ) url = 'http://jaegerextract:5000/extract' # url = 'http://localhost:6570/company/searchByName' data = json . dumps ({ 'keyword' : \"Mohsin\" }) response = requests . get ( url , data = data , headers = carrier ) return response Server side \u00b6 1 2 3 4 5 6 def extractSpan ( self ): span_ctx = tracer . extract ( format = Format . TEXT_MAP , carrier = {}) with tracer . start_active_span ( operation_name = 'extractSpan' , child_of = span_ctx ) as scope : scope . span . set_tag ( 'args' , 'input values here' ) return \"Server2\" RPC via RabbitMQ \u00b6 Client Call \u00b6 ``` python tab=\"client_RPC_jaeger.py\" def save_user_created(self, user_id, content): try: with tracer.start_active_span('save_user_created') as scope: scope.span.set_tag('args', [user_id, content]) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 # Distributed Tracing (Injecting Span) span = get_current_span() carrier = {} tracer.inject(span_context=span.context, format=Format.TEXT_MAP, carrier=carrier) _now = str(datetime.now()) # publish notification for job applied message = {\"user_id\": user_id, \"dated\": _now, \"data\": content} message_str = json.dumps(message) print(\"sending body to save : \" + message_str) # RabbitMQ Connection connection = pika.BlockingConnection(pika.ConnectionParameters('rabbitmq')) # connection = pika.BlockingConnection(pika.ConnectionParameters('localhost')) channel = connection.channel() channel.basic_publish( exchange='save_user_name_image', routing_key='', body=message_str, properties=pika.BasicProperties(headers=carrier) ) connection.close() span.finish() # Return REST Reply return jsonify({\"message\": \"User Name and Image Saved Mysql\"}), 201 except Exception as ex: scope.span.set_tag('Exception', ex) return jsonify(str(ex)), 500 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 ### Exchange-Consumer Call ``` python tab=\"client_RPC_jaeger.py\" def callback(self, ch, method, properties, body): span_ctx = tracer.extract(format=Format.TEXT_MAP, carrier=properties.headers) with tracer.start_active_span('callback', child_of=span_ctx) as scope: data = json.loads(str(body.decode(\"utf-8\"))) print(\"RECEIVED DATA: \" , data) innerData = data['data'] if 'userImage' in innerData.keys(): print(\"FIRST\") insert_query = \"INSERT INTO UserPersonalInfos (userId, legalName, image) VALUES (%s, %s, %s)\" insert_data = (data['user_id'], data['data']['userName'], data['data']['userImage']) else : print(\"SECOND\") insert_query = \"INSERT INTO UserPersonalInfos (userId, legalName) VALUES (%s, %s)\" insert_data = (data['user_id'], data['data']['userName']) cursor = self.mysqlConnection.cursor() scope.span.set_tag(\"query\", insert_query) scope.span.set_tag(\"queryData\", insert_data) cursor.execute(insert_query, insert_data) self.mysqlConnection.commit() print(\"Personal Information Inserted Successfully.\"","title":"Jaeger RPC"},{"location":"current/upgenics/jaeger/jaegerRPC/#http-and-rpc-calls-with-jaegers","text":"","title":"HTTP and RPC calls with Jaegers"},{"location":"current/upgenics/jaeger/jaegerRPC/#http-calls","text":"","title":"HTTP Calls"},{"location":"current/upgenics/jaeger/jaegerRPC/#client-files","text":"``` python tab=\"API.py\" from flask import Flask, request from flask import jsonify from flask_cors import CORS import requests import json import registrator from JaegerInjectAPI import TestInject app = Flask( name ) cors = CORS(app, resources={r\"/ \": {\"origins\": \" \"}})","title":"Client Files"},{"location":"current/upgenics/jaeger/jaegerRPC/#connection-to-models","text":"JaegerInjectAPI_Provider = TestInject()","title":"Connection to models"},{"location":"current/upgenics/jaeger/jaegerRPC/#distributed-tracing","text":"import jaegerTracing tracer = jaegerTracing.getTracerInstance() from flask_opentracing import FlaskTracing tracing = FlaskTracing(tracer, True, app) @app .route('/inject', methods=['GET']) def testjaegerInject(): try: application_status = JaegerInjectAPI_Provider.injectSpan() return str(application_status) except Exception as ex: return jsonify(str(ex)), 500 if name == ' main ': app.run(host='0.0.0.0') 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ``` python tab=\"JaegerInjectAPI.py\" import json from flask import jsonify import requests # Distributed Tracing from opentracing_instrumentation.request_context import get_current_span, span_in_context import jaegerTracing tracer = jaegerTracing.getTracerInstance() from opentracing.propagation import Format class TestInject(): def injectSpan(self): with tracer.start_active_span('injectSpan') as scope: scope.span.set_tag(\"args\", \"I hope you will see me in server side\") # Distributed Tracing with Jaeger carrier = {\"Content-Type\": \"application/json\"} tracer.inject( span_context=scope.span.context, format=Format.TEXT_MAP, carrier=carrier) url = 'http://jaegerextract:5000/extract' # url = 'http://localhost:6570/company/searchByName' data = json.dumps({'keyword':\"Mohsin\"}) response = requests.get(url, data = data, headers = carrier) return response","title":"Distributed Tracing"},{"location":"current/upgenics/jaeger/jaegerRPC/#server-files","text":"``` python tab=\"API.py\" from flask import Flask, request from flask import jsonify from flask_cors import CORS import requests import json import registrator from JaegerExtractAPI import TestExtract app = Flask( name ) cors = CORS(app, resources={r\"/ \": {\"origins\": \" \"}})","title":"Server Files"},{"location":"current/upgenics/jaeger/jaegerRPC/#connection-to-models_1","text":"TestExtract_Provider = TestExtract()","title":"Connection to models"},{"location":"current/upgenics/jaeger/jaegerRPC/#distributed-tracing_1","text":"import jaegerTracing tracer = jaegerTracing.getTracerInstance() from flask_opentracing import FlaskTracing tracing = FlaskTracing(tracer, True, app) @app .route('/extract', methods=['GET']) def testjaegerExtract(): try: application_status = TestExtract_Provider.extractSpan() return \"server1\" except Exception as ex: return jsonify(str(ex)), 500 if name == ' main ': app.run(host='0.0.0.0') 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 ``` python tab=\"JaegerExtactAPI.py\" import pymongo from datetime import datetime import pika import json from flask import jsonify from bson.objectid import ObjectId # Distributed Tracing from opentracing_instrumentation.request_context import get_current_span, span_in_context import jaegerTracing tracer = jaegerTracing.getTracerInstance() from opentracing.propagation import Format class TestExtract(): def extractSpan(self): span_ctx = tracer.extract(format=Format.TEXT_MAP, carrier={}) with tracer.start_active_span(operation_name='extractSpan', child_of=span_ctx) as scope: scope.span.set_tag('args', 'input values here') return \"Server2","title":"Distributed Tracing"},{"location":"current/upgenics/jaeger/jaegerRPC/#useful-code-snippets","text":"","title":"Useful Code Snippets"},{"location":"current/upgenics/jaeger/jaegerRPC/#client-side","text":"1 2 3 4 5 6 7 8 9 10 11 12 # Distributed Tracing with Jaeger carrier = { \"Content-Type\" : \"application/json\" } tracer . inject ( span_context = scope . span . context , format = Format . TEXT_MAP , carrier = carrier ) url = 'http://jaegerextract:5000/extract' # url = 'http://localhost:6570/company/searchByName' data = json . dumps ({ 'keyword' : \"Mohsin\" }) response = requests . get ( url , data = data , headers = carrier ) return response","title":"Client side"},{"location":"current/upgenics/jaeger/jaegerRPC/#server-side","text":"1 2 3 4 5 6 def extractSpan ( self ): span_ctx = tracer . extract ( format = Format . TEXT_MAP , carrier = {}) with tracer . start_active_span ( operation_name = 'extractSpan' , child_of = span_ctx ) as scope : scope . span . set_tag ( 'args' , 'input values here' ) return \"Server2\"","title":"Server side"},{"location":"current/upgenics/jaeger/jaegerRPC/#rpc-via-rabbitmq","text":"","title":"RPC via RabbitMQ"},{"location":"current/upgenics/jaeger/jaegerRPC/#client-call","text":"``` python tab=\"client_RPC_jaeger.py\" def save_user_created(self, user_id, content): try: with tracer.start_active_span('save_user_created') as scope: scope.span.set_tag('args', [user_id, content]) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 # Distributed Tracing (Injecting Span) span = get_current_span() carrier = {} tracer.inject(span_context=span.context, format=Format.TEXT_MAP, carrier=carrier) _now = str(datetime.now()) # publish notification for job applied message = {\"user_id\": user_id, \"dated\": _now, \"data\": content} message_str = json.dumps(message) print(\"sending body to save : \" + message_str) # RabbitMQ Connection connection = pika.BlockingConnection(pika.ConnectionParameters('rabbitmq')) # connection = pika.BlockingConnection(pika.ConnectionParameters('localhost')) channel = connection.channel() channel.basic_publish( exchange='save_user_name_image', routing_key='', body=message_str, properties=pika.BasicProperties(headers=carrier) ) connection.close() span.finish() # Return REST Reply return jsonify({\"message\": \"User Name and Image Saved Mysql\"}), 201 except Exception as ex: scope.span.set_tag('Exception', ex) return jsonify(str(ex)), 500 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 ### Exchange-Consumer Call ``` python tab=\"client_RPC_jaeger.py\" def callback(self, ch, method, properties, body): span_ctx = tracer.extract(format=Format.TEXT_MAP, carrier=properties.headers) with tracer.start_active_span('callback', child_of=span_ctx) as scope: data = json.loads(str(body.decode(\"utf-8\"))) print(\"RECEIVED DATA: \" , data) innerData = data['data'] if 'userImage' in innerData.keys(): print(\"FIRST\") insert_query = \"INSERT INTO UserPersonalInfos (userId, legalName, image) VALUES (%s, %s, %s)\" insert_data = (data['user_id'], data['data']['userName'], data['data']['userImage']) else : print(\"SECOND\") insert_query = \"INSERT INTO UserPersonalInfos (userId, legalName) VALUES (%s, %s)\" insert_data = (data['user_id'], data['data']['userName']) cursor = self.mysqlConnection.cursor() scope.span.set_tag(\"query\", insert_query) scope.span.set_tag(\"queryData\", insert_data) cursor.execute(insert_query, insert_data) self.mysqlConnection.commit() print(\"Personal Information Inserted Successfully.\"","title":"Client Call"},{"location":"designPattern/design-pattern-intro/","text":"What is Design Pattern \u00b6 Design patterns are typical solutions to commonly occurring problems in software design. They are like pre-made blueprints that you can customize to solve a recurring design problem in your code. You can\u2019t just find a pattern and copy it into your program, the way you can with off-the-shelf functions or libraries. The pattern is not a specific piece of code, but a general concept for solving a particular problem. You can follow the pattern details and implement a solution that suits the realities of your own program. Patterns are often confused with algorithms, because both concepts describe typical solutions to some known problems. While an algorithm always defines a clear set of actions that can achieve some goal, a pattern is a more high-level description of a solution. The code of the same pattern applied to two different programs may be different. An analogy to an algorithm is a cooking recipe: both have clear steps to achieve a goal. On the other hand, a pattern is more like a blueprint: you can see what the result and its features are, but the exact order of implementation is up to you. What does the pattern consist of? \u00b6 Most patterns are described very formally so people can reproduce them in many contexts. Here are the sections that are usually present in a pattern description: Intent of the pattern briefly describes both the problem and the solution. Motivation further explains the problem and the solution the pattern makes possible. Structure of classes shows each part of the pattern and how they are related. Code example in one of the popular programming languages makes it easier to grasp the idea behind the pattern. Some pattern catalogs list other useful details, such as applicability of the pattern, implementation steps and relations with other patterns.","title":"What is Design Pattern"},{"location":"designPattern/design-pattern-intro/#what-is-design-pattern","text":"Design patterns are typical solutions to commonly occurring problems in software design. They are like pre-made blueprints that you can customize to solve a recurring design problem in your code. You can\u2019t just find a pattern and copy it into your program, the way you can with off-the-shelf functions or libraries. The pattern is not a specific piece of code, but a general concept for solving a particular problem. You can follow the pattern details and implement a solution that suits the realities of your own program. Patterns are often confused with algorithms, because both concepts describe typical solutions to some known problems. While an algorithm always defines a clear set of actions that can achieve some goal, a pattern is a more high-level description of a solution. The code of the same pattern applied to two different programs may be different. An analogy to an algorithm is a cooking recipe: both have clear steps to achieve a goal. On the other hand, a pattern is more like a blueprint: you can see what the result and its features are, but the exact order of implementation is up to you.","title":"What is Design Pattern"},{"location":"designPattern/design-pattern-intro/#what-does-the-pattern-consist-of","text":"Most patterns are described very formally so people can reproduce them in many contexts. Here are the sections that are usually present in a pattern description: Intent of the pattern briefly describes both the problem and the solution. Motivation further explains the problem and the solution the pattern makes possible. Structure of classes shows each part of the pattern and how they are related. Code example in one of the popular programming languages makes it easier to grasp the idea behind the pattern. Some pattern catalogs list other useful details, such as applicability of the pattern, implementation steps and relations with other patterns.","title":"What does the pattern consist of?"},{"location":"designPattern/behavioural/behaviour-dp/","text":"``` bash tab=\"Bash\" !/bin/bash \u00b6 echo \"Hello world!\" 1 2 3 4 5 6 ``` c tab=\"C\" #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); } ``` c++ tab=\"C++\" include \u00b6 int main() { std::cout << \"Hello world!\" << std::endl; return 0; } 1 2 3 4 5 6 7 8 ``` c# tab=\"C#\" using System; class Program { static void Main(string[] args) { Console.WriteLine(\"Hello world!\"); } }","title":"Behaviour Pattern"},{"location":"designPattern/behavioural/behaviour-dp/#binbash","text":"echo \"Hello world!\" 1 2 3 4 5 6 ``` c tab=\"C\" #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); } ``` c++ tab=\"C++\"","title":"!/bin/bash"},{"location":"designPattern/behavioural/behaviour-dp/#include","text":"int main() { std::cout << \"Hello world!\" << std::endl; return 0; } 1 2 3 4 5 6 7 8 ``` c# tab=\"C#\" using System; class Program { static void Main(string[] args) { Console.WriteLine(\"Hello world!\"); } }","title":"include "},{"location":"designPattern/creational/creational-dp/","text":"Creational Design Pattern \u00b6 Creational design patterns provide various object creation mechanisms, which increase flexibility and reuse of existing code. Factory Method \u00b6 ``` java tab=\"Shape.java\" public interface Shape { 1 void draw(); } 1 2 3 4 5 6 7 8 9 10 11 12 ``` java tab=\"Square.java\" public class Square implements Shape { @Override public void draw() { System.out.println(\"In square\"); } } ``` java tab=\"Circle.java\" public class Circle implements Shape { 1 2 3 4 5 6 7 8 9 10 11 @Override public void draw() { System.out.println(\"In Circle\"); } @Override public String toString() { // TODO Auto-generated method stub return getClass().getName() + \"Class\"; } } 1 2 3 4 5 6 7 8 9 10 11 12 ``` java tab=\"Rectangle.java\" public class Rectangle implements Shape { @Override public void draw() { System.out.println(\"In Rectangle\"); } } ``` java tab=\"ShapeFactory.java\" public class ShapeFactory { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public Shape getShape(String shapetype){ if (shapetype == null) { return null; } else if ( shapetype.equalsIgnoreCase(\"circle\") ) { return new Circle(); } else if ( shapetype.equalsIgnoreCase(\"rectangle\") ) { return new Rectangle(); } else if ( shapetype.equalsIgnoreCase(\"Square\") ) { return new Square(); } return null; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ``` java tab=\"FactoryDemo.java\" public class FactoryDemo { public static void main(String[] args) { ShapeFactory factory = new ShapeFactory(); Shape circle = factory.getShape(\"Circle\"); circle.draw(); Shape rectangle = factory.getShape(\"rectangle\"); rectangle.draw(); } } Abstract Factory Method \u00b6 ``` java tab=\"Color.java\" public interface Color { 1 public void fill(); } 1 2 3 4 5 6 7 8 9 10 11 ``` java tab=\"Blue.java\" public class Blue implements Color { @Override public void fill() { System.out.println(\"filling Blue color\"); } } ``` java tab=\"Green.java\" public class Green implements Color { 1 2 3 4 @Override public void fill() { System.out.println(\"filling Green color\"); } } 1 2 3 4 5 6 7 8 9 10 11 12 ``` java tab=\"Red.java\" public class Red implements Color { @Override public void fill() { System.out.println(\"filling red color\"); } } ``` java tab=\"Shape.java\" public interface Shape { 1 void draw(); } 1 2 3 4 5 6 7 8 9 10 11 12 ``` java tab=\"Square.java\" public class Square implements Shape { @Override public void draw() { System.out.println(\"In square\"); } } ``` java tab=\"Circle.java\" public class Circle implements Shape { 1 2 3 4 5 6 7 8 9 10 11 @Override public void draw() { System.out.println(\"In Circle\"); } @Override public String toString() { // TODO Auto-generated method stub return getClass().getName() + \"Class\"; } } 1 2 3 4 5 6 7 8 9 10 11 12 ``` java tab=\"Rectangle.java\" public class Rectangle implements Shape { @Override public void draw() { System.out.println(\"In Rectangle\"); } } ``` java tab=\"AbstractFactory.java\" public abstract class AbstractFactory { 1 2 public abstract Shape getShape(String shapetype); public abstract Color getColor(String type); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 ``` java tab=\"ColorFactory.java\" public class ColorFactory extends AbstractFactory { @Override public Color getColor(String type){ if (type ==null) { System.out.println(\"yes i am in\"); return null; } else if (type.equalsIgnoreCase(\"Green\")) { return new Green(); } else if (type.equalsIgnoreCase(\"Blue\")) { return new Blue(); } else if (type.equalsIgnoreCase(\"Red\")) { return new Red(); } return null; } @Override public Shape getShape(String shapetype) { // TODO Auto-generated method stub return null; } } ``` java tab=\"ShapeFactory.java\" public class ShapeFactory extends AbstractFactory{ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 public Shape getShape(String shapetype){ if (shapetype == null) { return null; } else if ( shapetype.equalsIgnoreCase(\"circle\") ) { return new Circle(); } else if ( shapetype.equalsIgnoreCase(\"rectangle\") ) { return new Rectangle(); } else if ( shapetype.equalsIgnoreCase(\"Square\") ) { return new Square(); } return null; } @Override public Color getColor(String type) { // TODO Auto-generated method stub return null; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ``` java tab=\"FactoryProducer.java\" public class FactoryProducer { public static AbstractFactory getFactory(String type){ if (type == null) { return null; } else if (type.equalsIgnoreCase(\"Shape\")) { return new ShapeFactory(); }else if (type.equalsIgnoreCase(\"Color\")) { return new ColorFactory(); } return null; } } ``` java tab=\"AbstractFactoryPatternDemo.java\" public class AbstractFactoryPatternDemo { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main(String[] args) { AbstractFactory shapeFactory = FactoryProducer.getFactory(\"Shape\"); Shape circle = shapeFactory.getShape(\"Circle\"); circle.draw(); AbstractFactory colorFactory = FactoryProducer.getFactory(\"Color\"); Color red = colorFactory.getColor(\"Green\"); red.fill(); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 ## Singleton Pattern *** !!! note \" \" This is how Singleton Class looks like ``` java tab=\"Singleton.java\" public class Singleton { private static Singleton uniqueInstance; private Singleton(){}; public static Singleton getInstance(){ if (uniqueInstance == null) { synchronized (Singleton.class) { if (uniqueInstance == null) { uniqueInstance = new Singleton(); } } } return uniqueInstance; } } Example ``` java tab=\"Preferences.java\" public class Singleton { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 private static Singleton uniqueInstance; private Singleton(){}; public static Singleton getInstance(){ if (uniqueInstance == null) { synchronized (Singleton.class) { if (uniqueInstance == null) { uniqueInstance = new Singleton(); } } } return uniqueInstance; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ``` java tab=\"Settings.java\" public class Settings { Preferences settings = Preferences.getInstance(); public Settings() { settings.setCgpa(3.14); settings.setContact(\"03336363636\"); settings.setEmail(\"mohsinmahmoodmdl@gmail.com\"); settings.setName(\"Muhammad Mohsin Mahmood\"); } public void showSettings() { settings.show(); } } ``` java tab=\"Contact.java\" public class Contact { 1 2 3 4 5 6 Preferences settings = Preferences.getInstance(); public void showSettings() { settings.show(); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 ``` java tab=\"Home.java\" public class Home { Preferences settings = Preferences.getInstance(); public void showSettings() { settings.show(); } } ``` java tab=\"SingletonDemo.java\" public class SingletonDemo { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public static void main(String[] args) { Settings settings = new Settings(); settings.showSettings(); System.out.println(\"\\nHome: Settings\"); System.out.println(\"================\"); Home home = new Home(); home.showSettings(); System.out.println(\"\\nContact: Settings\"); System.out.println(\"================\"); Contact contact = new Contact(); contact.showSettings(); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ## Prototype Pattern *** ``` java tab=\"Person.java\" public class Person { private String name; public Person(String name) { this.name = name; } public void setName(String name) { this.name = name; } public String getName() { return name; } } ``` java tab=\"Car.java\" public class Car implements Cloneable { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 private Person owner; public Car() { } public void setOwner(String name) { Person owner = new Person(name); this.owner = owner; } public Person getOwner() { return owner; } public Object clone() { try { Car car = (Car) super.clone(); return car; } catch (CloneNotSupportedException e) { throw new AssertionError(); } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ``` java tab=\"Main.java\" public class Main { public static void main(String[] args) throws CloneNotSupportedException { Car honda = new Car(); honda.setOwner(\"Mohsin Mahmood\"); Car hondacopy = (Car) honda.clone(); System.out.println(\"Name of first owner \" + honda.getOwner().getName()); System.out.println(\"Name of first owner \" + hondacopy.getOwner().getName()); } } Lab Exam Creational Pattern \u00b6 ``` java tab=\"AudioPlayer.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public interface AudioPlayer { 1 2 3 4 public void play(); public void forward(); public void backward(); public void stop(); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ``` java tab=\"MP3Player.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class MP3Player implements AudioPlayer { public void play() { System.out.println(\"Running media file from \" + getClass().getName()); } public void forward() { // TODO Auto-generated method stub } public void backward() { // TODO Auto-generated method stub } public void stop() { // TODO Auto-generated method stub } } ``` java tab=\"JetAudioHDPlayer.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class JetAudioHDPlayer implements AudioPlayer { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public void play() { System.out.println(\"Running media file from \" + getClass().getName()); } public void forward() { // TODO Auto-generated method stub } public void backward() { // TODO Auto-generated method stub } public void stop() { // TODO Auto-generated method stub } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 ``` java tab=\"WinAmpPlayer.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class WinAmpPlayer implements AudioPlayer { public void play() { System.out.println(\"Running media file from \" + getClass().getName()); } public void forward() { // TODO Auto-generated method stub } public void backward() { // TODO Auto-generated method stub } public void stop() { // TODO Auto-generated method stub } } ``` java tab=\"VideoPlayer.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public interface VideoPlayer { 1 2 3 4 public void play(); public void forward(); public void backward(); public void stop(); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 ``` java tab=\"VLCMediaPlayer.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class VLCMediaPlayer implements VideoPlayer { public void play() { System.out.println(\"Running media file from \" + getClass().getName()); } public void forward() { // TODO Auto-generated method stub } public void backward() { // TODO Auto-generated method stub } public void stop() { // TODO Auto-generated method stub } } ``` java tab=\"WindowsMediaPlayer.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class WindowsMediaPlayer implements VideoPlayer{ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public void play() { System.out.println(\"Running media file from \" + getClass().getName()); } public void forward() { // TODO Auto-generated method stub } public void backward() { // TODO Auto-generated method stub } public void stop() { // TODO Auto-generated method stub } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 ``` java tab=\"AdobeFlashPlayer.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class AdobeFlashPlayer implements VideoPlayer { public void play() { System.out.println(\"Running media file from \" + getClass().getName()); } public void forward() { // TODO Auto-generated method stub } public void backward() { // TODO Auto-generated method stub } public void stop() { // TODO Auto-generated method stub } } ``` java tab=\"AbstractFactory.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public abstract class AbstractFactory { 1 2 public abstract VideoPlayer getVideoPlayer(String type); public abstract AudioPlayer getAudioPlayer(String type); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 ``` java tab=\"AudioPlayerFactory.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class AudioPlayerFactory extends AbstractFactory { public AudioPlayer getAudioPlayer(String type) { if (type == null) { return null; } else if (type.equalsIgnoreCase(\"MP3Player\")) { return new MP3Player(); } else if (type.equalsIgnoreCase(\"JetAudioHDPlayer\")) { return new JetAudioHDPlayer(); } else if (type.equalsIgnoreCase(\"WinAmpPlayer\")) { return new WinAmpPlayer(); } return null; } public VideoPlayer getVideoPlayer(String type) { // TODO Auto-generated method stub return null; } } ``` java tab=\"VideoPlayerFactory.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class VideoPlayerFactory extends AbstractFactory { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public VideoPlayer getVideoPlayer(String type) { if (type == null) { return null; } else if (type.equalsIgnoreCase(\"VLCMediaPlayer\")) { return new VLCMediaPlayer(); } else if (type.equalsIgnoreCase(\"WindowsMediaPlayer\")) { return new WindowsMediaPlayer(); } else if (type.equalsIgnoreCase(\"AdobeFlashPlayer\")) { return new AdobeFlashPlayer(); } return null; } public AudioPlayer getAudioPlayer(String type) { // TODO Auto-generated method stub return null; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 ``` java tab=\"FactoryProducer.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class FactoryProducer { public static AbstractFactory getFactory(String type) { if (type == null) { return null; } else if (type.equalsIgnoreCase(\"AudioPlayerFactory\")) { return new AudioPlayerFactory(); }else if (type.equalsIgnoreCase(\"VideoPlayerFactory\")) { return new VideoPlayerFactory(); } return null; } } ``` java tab=\"MusicPlayerFactoryDemo.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class MusicPlayerFactoryDemo { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 public static void main(String[] args) { //getting Audio Factory AbstractFactory factory = FactoryProducer.getFactory(\"AudioPlayerFactory\"); // getting \"MP3Player\" audio player AudioPlayer mp3Player = factory.getAudioPlayer(\"MP3Player\"); mp3Player.play(); AudioPlayer jetaudio = factory.getAudioPlayer(\"JetAudioHDPlayer\"); jetaudio.play(); AudioPlayer winamp = factory.getAudioPlayer(\"WinAmpPlayer\"); winamp.play(); System.out.println(\"\\n=======================================\\n\"); //Creating Video Factory AbstractFactory factory2 = FactoryProducer.getFactory(\"VideoPlayerFactory\"); VideoPlayer vlc = factory2.getVideoPlayer(\"VLCMediaPlayer\"); vlc.play(); VideoPlayer wmp = factory2.getVideoPlayer(\"WindowsMediaPlayer\"); wmp.play(); VideoPlayer flash = factory2.getVideoPlayer(\"AdobeFlashPlayer\"); flash.play(); } } ```","title":"Creational Pattern"},{"location":"designPattern/creational/creational-dp/#creational-design-pattern","text":"Creational design patterns provide various object creation mechanisms, which increase flexibility and reuse of existing code.","title":"Creational Design Pattern"},{"location":"designPattern/creational/creational-dp/#factory-method","text":"``` java tab=\"Shape.java\" public interface Shape { 1 void draw(); } 1 2 3 4 5 6 7 8 9 10 11 12 ``` java tab=\"Square.java\" public class Square implements Shape { @Override public void draw() { System.out.println(\"In square\"); } } ``` java tab=\"Circle.java\" public class Circle implements Shape { 1 2 3 4 5 6 7 8 9 10 11 @Override public void draw() { System.out.println(\"In Circle\"); } @Override public String toString() { // TODO Auto-generated method stub return getClass().getName() + \"Class\"; } } 1 2 3 4 5 6 7 8 9 10 11 12 ``` java tab=\"Rectangle.java\" public class Rectangle implements Shape { @Override public void draw() { System.out.println(\"In Rectangle\"); } } ``` java tab=\"ShapeFactory.java\" public class ShapeFactory { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public Shape getShape(String shapetype){ if (shapetype == null) { return null; } else if ( shapetype.equalsIgnoreCase(\"circle\") ) { return new Circle(); } else if ( shapetype.equalsIgnoreCase(\"rectangle\") ) { return new Rectangle(); } else if ( shapetype.equalsIgnoreCase(\"Square\") ) { return new Square(); } return null; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ``` java tab=\"FactoryDemo.java\" public class FactoryDemo { public static void main(String[] args) { ShapeFactory factory = new ShapeFactory(); Shape circle = factory.getShape(\"Circle\"); circle.draw(); Shape rectangle = factory.getShape(\"rectangle\"); rectangle.draw(); } }","title":"Factory Method"},{"location":"designPattern/creational/creational-dp/#abstract-factory-method","text":"``` java tab=\"Color.java\" public interface Color { 1 public void fill(); } 1 2 3 4 5 6 7 8 9 10 11 ``` java tab=\"Blue.java\" public class Blue implements Color { @Override public void fill() { System.out.println(\"filling Blue color\"); } } ``` java tab=\"Green.java\" public class Green implements Color { 1 2 3 4 @Override public void fill() { System.out.println(\"filling Green color\"); } } 1 2 3 4 5 6 7 8 9 10 11 12 ``` java tab=\"Red.java\" public class Red implements Color { @Override public void fill() { System.out.println(\"filling red color\"); } } ``` java tab=\"Shape.java\" public interface Shape { 1 void draw(); } 1 2 3 4 5 6 7 8 9 10 11 12 ``` java tab=\"Square.java\" public class Square implements Shape { @Override public void draw() { System.out.println(\"In square\"); } } ``` java tab=\"Circle.java\" public class Circle implements Shape { 1 2 3 4 5 6 7 8 9 10 11 @Override public void draw() { System.out.println(\"In Circle\"); } @Override public String toString() { // TODO Auto-generated method stub return getClass().getName() + \"Class\"; } } 1 2 3 4 5 6 7 8 9 10 11 12 ``` java tab=\"Rectangle.java\" public class Rectangle implements Shape { @Override public void draw() { System.out.println(\"In Rectangle\"); } } ``` java tab=\"AbstractFactory.java\" public abstract class AbstractFactory { 1 2 public abstract Shape getShape(String shapetype); public abstract Color getColor(String type); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 ``` java tab=\"ColorFactory.java\" public class ColorFactory extends AbstractFactory { @Override public Color getColor(String type){ if (type ==null) { System.out.println(\"yes i am in\"); return null; } else if (type.equalsIgnoreCase(\"Green\")) { return new Green(); } else if (type.equalsIgnoreCase(\"Blue\")) { return new Blue(); } else if (type.equalsIgnoreCase(\"Red\")) { return new Red(); } return null; } @Override public Shape getShape(String shapetype) { // TODO Auto-generated method stub return null; } } ``` java tab=\"ShapeFactory.java\" public class ShapeFactory extends AbstractFactory{ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 public Shape getShape(String shapetype){ if (shapetype == null) { return null; } else if ( shapetype.equalsIgnoreCase(\"circle\") ) { return new Circle(); } else if ( shapetype.equalsIgnoreCase(\"rectangle\") ) { return new Rectangle(); } else if ( shapetype.equalsIgnoreCase(\"Square\") ) { return new Square(); } return null; } @Override public Color getColor(String type) { // TODO Auto-generated method stub return null; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ``` java tab=\"FactoryProducer.java\" public class FactoryProducer { public static AbstractFactory getFactory(String type){ if (type == null) { return null; } else if (type.equalsIgnoreCase(\"Shape\")) { return new ShapeFactory(); }else if (type.equalsIgnoreCase(\"Color\")) { return new ColorFactory(); } return null; } } ``` java tab=\"AbstractFactoryPatternDemo.java\" public class AbstractFactoryPatternDemo { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static void main(String[] args) { AbstractFactory shapeFactory = FactoryProducer.getFactory(\"Shape\"); Shape circle = shapeFactory.getShape(\"Circle\"); circle.draw(); AbstractFactory colorFactory = FactoryProducer.getFactory(\"Color\"); Color red = colorFactory.getColor(\"Green\"); red.fill(); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 ## Singleton Pattern *** !!! note \" \" This is how Singleton Class looks like ``` java tab=\"Singleton.java\" public class Singleton { private static Singleton uniqueInstance; private Singleton(){}; public static Singleton getInstance(){ if (uniqueInstance == null) { synchronized (Singleton.class) { if (uniqueInstance == null) { uniqueInstance = new Singleton(); } } } return uniqueInstance; } } Example ``` java tab=\"Preferences.java\" public class Singleton { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 private static Singleton uniqueInstance; private Singleton(){}; public static Singleton getInstance(){ if (uniqueInstance == null) { synchronized (Singleton.class) { if (uniqueInstance == null) { uniqueInstance = new Singleton(); } } } return uniqueInstance; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 ``` java tab=\"Settings.java\" public class Settings { Preferences settings = Preferences.getInstance(); public Settings() { settings.setCgpa(3.14); settings.setContact(\"03336363636\"); settings.setEmail(\"mohsinmahmoodmdl@gmail.com\"); settings.setName(\"Muhammad Mohsin Mahmood\"); } public void showSettings() { settings.show(); } } ``` java tab=\"Contact.java\" public class Contact { 1 2 3 4 5 6 Preferences settings = Preferences.getInstance(); public void showSettings() { settings.show(); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 ``` java tab=\"Home.java\" public class Home { Preferences settings = Preferences.getInstance(); public void showSettings() { settings.show(); } } ``` java tab=\"SingletonDemo.java\" public class SingletonDemo { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public static void main(String[] args) { Settings settings = new Settings(); settings.showSettings(); System.out.println(\"\\nHome: Settings\"); System.out.println(\"================\"); Home home = new Home(); home.showSettings(); System.out.println(\"\\nContact: Settings\"); System.out.println(\"================\"); Contact contact = new Contact(); contact.showSettings(); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ## Prototype Pattern *** ``` java tab=\"Person.java\" public class Person { private String name; public Person(String name) { this.name = name; } public void setName(String name) { this.name = name; } public String getName() { return name; } } ``` java tab=\"Car.java\" public class Car implements Cloneable { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 private Person owner; public Car() { } public void setOwner(String name) { Person owner = new Person(name); this.owner = owner; } public Person getOwner() { return owner; } public Object clone() { try { Car car = (Car) super.clone(); return car; } catch (CloneNotSupportedException e) { throw new AssertionError(); } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ``` java tab=\"Main.java\" public class Main { public static void main(String[] args) throws CloneNotSupportedException { Car honda = new Car(); honda.setOwner(\"Mohsin Mahmood\"); Car hondacopy = (Car) honda.clone(); System.out.println(\"Name of first owner \" + honda.getOwner().getName()); System.out.println(\"Name of first owner \" + hondacopy.getOwner().getName()); } }","title":"Abstract Factory Method"},{"location":"designPattern/creational/creational-dp/#lab-exam-creational-pattern","text":"``` java tab=\"AudioPlayer.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public interface AudioPlayer { 1 2 3 4 public void play(); public void forward(); public void backward(); public void stop(); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ``` java tab=\"MP3Player.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class MP3Player implements AudioPlayer { public void play() { System.out.println(\"Running media file from \" + getClass().getName()); } public void forward() { // TODO Auto-generated method stub } public void backward() { // TODO Auto-generated method stub } public void stop() { // TODO Auto-generated method stub } } ``` java tab=\"JetAudioHDPlayer.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class JetAudioHDPlayer implements AudioPlayer { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 public void play() { System.out.println(\"Running media file from \" + getClass().getName()); } public void forward() { // TODO Auto-generated method stub } public void backward() { // TODO Auto-generated method stub } public void stop() { // TODO Auto-generated method stub } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 ``` java tab=\"WinAmpPlayer.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class WinAmpPlayer implements AudioPlayer { public void play() { System.out.println(\"Running media file from \" + getClass().getName()); } public void forward() { // TODO Auto-generated method stub } public void backward() { // TODO Auto-generated method stub } public void stop() { // TODO Auto-generated method stub } } ``` java tab=\"VideoPlayer.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public interface VideoPlayer { 1 2 3 4 public void play(); public void forward(); public void backward(); public void stop(); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 ``` java tab=\"VLCMediaPlayer.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class VLCMediaPlayer implements VideoPlayer { public void play() { System.out.println(\"Running media file from \" + getClass().getName()); } public void forward() { // TODO Auto-generated method stub } public void backward() { // TODO Auto-generated method stub } public void stop() { // TODO Auto-generated method stub } } ``` java tab=\"WindowsMediaPlayer.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class WindowsMediaPlayer implements VideoPlayer{ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public void play() { System.out.println(\"Running media file from \" + getClass().getName()); } public void forward() { // TODO Auto-generated method stub } public void backward() { // TODO Auto-generated method stub } public void stop() { // TODO Auto-generated method stub } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 ``` java tab=\"AdobeFlashPlayer.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class AdobeFlashPlayer implements VideoPlayer { public void play() { System.out.println(\"Running media file from \" + getClass().getName()); } public void forward() { // TODO Auto-generated method stub } public void backward() { // TODO Auto-generated method stub } public void stop() { // TODO Auto-generated method stub } } ``` java tab=\"AbstractFactory.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public abstract class AbstractFactory { 1 2 public abstract VideoPlayer getVideoPlayer(String type); public abstract AudioPlayer getAudioPlayer(String type); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 ``` java tab=\"AudioPlayerFactory.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class AudioPlayerFactory extends AbstractFactory { public AudioPlayer getAudioPlayer(String type) { if (type == null) { return null; } else if (type.equalsIgnoreCase(\"MP3Player\")) { return new MP3Player(); } else if (type.equalsIgnoreCase(\"JetAudioHDPlayer\")) { return new JetAudioHDPlayer(); } else if (type.equalsIgnoreCase(\"WinAmpPlayer\")) { return new WinAmpPlayer(); } return null; } public VideoPlayer getVideoPlayer(String type) { // TODO Auto-generated method stub return null; } } ``` java tab=\"VideoPlayerFactory.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class VideoPlayerFactory extends AbstractFactory { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 public VideoPlayer getVideoPlayer(String type) { if (type == null) { return null; } else if (type.equalsIgnoreCase(\"VLCMediaPlayer\")) { return new VLCMediaPlayer(); } else if (type.equalsIgnoreCase(\"WindowsMediaPlayer\")) { return new WindowsMediaPlayer(); } else if (type.equalsIgnoreCase(\"AdobeFlashPlayer\")) { return new AdobeFlashPlayer(); } return null; } public AudioPlayer getAudioPlayer(String type) { // TODO Auto-generated method stub return null; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 ``` java tab=\"FactoryProducer.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class FactoryProducer { public static AbstractFactory getFactory(String type) { if (type == null) { return null; } else if (type.equalsIgnoreCase(\"AudioPlayerFactory\")) { return new AudioPlayerFactory(); }else if (type.equalsIgnoreCase(\"VideoPlayerFactory\")) { return new VideoPlayerFactory(); } return null; } } ``` java tab=\"MusicPlayerFactoryDemo.java\" /* * * Muhammad Mohsin Mahmood * SP16-BSE-060 * * */ public class MusicPlayerFactoryDemo { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 public static void main(String[] args) { //getting Audio Factory AbstractFactory factory = FactoryProducer.getFactory(\"AudioPlayerFactory\"); // getting \"MP3Player\" audio player AudioPlayer mp3Player = factory.getAudioPlayer(\"MP3Player\"); mp3Player.play(); AudioPlayer jetaudio = factory.getAudioPlayer(\"JetAudioHDPlayer\"); jetaudio.play(); AudioPlayer winamp = factory.getAudioPlayer(\"WinAmpPlayer\"); winamp.play(); System.out.println(\"\\n=======================================\\n\"); //Creating Video Factory AbstractFactory factory2 = FactoryProducer.getFactory(\"VideoPlayerFactory\"); VideoPlayer vlc = factory2.getVideoPlayer(\"VLCMediaPlayer\"); vlc.play(); VideoPlayer wmp = factory2.getVideoPlayer(\"WindowsMediaPlayer\"); wmp.play(); VideoPlayer flash = factory2.getVideoPlayer(\"AdobeFlashPlayer\"); flash.play(); } } ```","title":"Lab Exam Creational Pattern"},{"location":"designPattern/structural/structural-dp/","text":"Structural Pattern \u00b6 Flyweigt Pattern \u00b6 ``` java tab=\"Shape.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Mar 28, 2019 */ public interface Shape { 1 public void draw(); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 ``` java tab=\"Circle.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Mar 28, 2019 */ public class Circle implements Shape { private String name = null; private int xcoor = 0; private int ycoor = 0; public Circle(String name) { super(); this.name = name; } public String getName() { return name; } public void setName(String name) { this.name = name; } public int getXcoor() { return xcoor; } public void setXcoor(int xcoor) { this.xcoor = xcoor; } public int getYcoor() { return ycoor; } public void setYCoor(int ycoor) { this.ycoor = ycoor; } public void draw() { System.out.println(\"Drawing a Circle having \" + this.name + \" Color at X: \" + this.xcoor + \" Y :\" + this.ycoor + \" Coordinates\"); } } ``` java tab=\"ShapeFactory.java\" import java.util.HashMap; /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Mar 28, 2019 */ public class ShapeFactory { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 private static final HashMap<String, Shape> shapeMap = new HashMap<>(); public static Shape getShape(String color) { Circle circle = (Circle) shapeMap.get(color); if (circle == null) { circle = new Circle(color); shapeMap.put(color, circle); System.out.println(\"Creating Circle of Color : \" + color); } return circle; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 ``` java tab=\"FlyweightPatternDemo.java\" import java.util.Random; /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Mar 28, 2019 */ public class FlyweightPatternDemo { public static final String color[] = { \"Red\", \"Green\", \"Blue\", \"White\", \"Black\" }; static Random rand = new Random(); public static void main(String[] args) { for (int i = 0; i < 20; i++) { Circle circle = (Circle) ShapeFactory.getShape(getColor()); circle.setXcoor(getRandX()); circle.setYCoor(getRandY()); circle.draw(); } } private static String getColor() { return color[rand.nextInt(color.length)]; } private static int getRandX() { return rand.nextInt(100); } private static int getRandY() { return rand.nextInt(100); } } Flyweigt Pattern Example \u00b6 ``` java tab=\"AlphabetGenerator.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Mar 29, 2019 */ package LabTask; import java.util.HashMap; public class AlphabetGenerator { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 private static final HashMap<Character, Character> charmap = new HashMap<>(); public static char getChar(char ch) { Character retch = charmap.get(ch); if (retch == null) { retch = ch; charmap.put(ch, ch); System.out.println(\"Char '\" + ch + \"' is added to the Hashmap\"); } else System.out.println(retch); return retch; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 ``` java tab=\"FlyweightDemo.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Mar 29, 2019 * Task Description: Consider a Word text editor where a user can type alphabet and takes one byte in momory . Implemet flyweight patter to use memory efficeiently for storage of characters. Alphabets are A,B,C,D,E */ package LabTask; import java.util.Random; public class FlyweightDemo { private static char alpha[] = { 'A', 'B', 'C', 'D', 'E' }; public static void main(String[] args) { for (int i = 0; i < 100; i++) AlphabetGenerator.getChar( getRandomAlpha() ); } private static char getRandomAlpha() { Random rand = new Random(); return alpha[rand.nextInt(5)]; } } Facade Pattern \u00b6 ``` java tab=\"HomeTheater.java\" package facadePattern; public class HomeTheater { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 private Amplifier amp; private DVDPlayer dvdPlayer; private Light light; private Popcorn popcorn; private Projecter projecter; public HomeTheater() { this.amp = new Amplifier(); this.dvdPlayer = new DVDPlayer(); this.light = new Light(); this.popcorn = new Popcorn(); this.projecter = new Projecter(); } public void watchMovie() { popcorn.load(); popcorn.on(); projecter.lower(); amp.on(); amp.medium(); amp.inputDVD(); dvdPlayer.on(); dvdPlayer.load(); dvdPlayer.sorround(); projecter.on(); projecter.inputDVD(); projecter.wideScreen(); light.dim(); dvdPlayer.start(); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ``` java tab=\"Amplifier.java\" package facadePattern; public class Amplifier { public void on() { // TODO Auto-generated method stub } public void inputDVD() { // TODO Auto-generated method stub } public void medium() { // TODO Auto-generated method stub } } ``` java tab=\"DVDPlayer.java\" package facadePattern; public class DVDPlayer { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public void load() { // TODO Auto-generated method stub } public void sorround() { // TODO Auto-generated method stub } public void start() { // TODO Auto-generated method stub } public void on() { // TODO Auto-generated method stub } } 1 2 3 4 5 6 7 8 9 10 11 12 ``` java tab=\"Light.java\" package facadePattern; public class Light { public void dim() { // TODO Auto-generated method stub } } ``` java tab=\"Popcorn.java\" package facadePattern; public class Popcorn { 1 2 3 4 5 6 7 8 9 public void load() { System.out.println(\"Popcorn machine is loading.\"); } public void on() { System.out.println(\"\"); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ``` java tab=\"Projecter.java\" package facadePattern; public class Projecter { public void lower() { // TODO Auto-generated method stub } public void on() { // TODO Auto-generated method stub } public void load() { // TODO Auto-generated method stub } public void inputDVD() { // TODO Auto-generated method stub } public void wideScreen() { // TODO Auto-generated method stub } } ``` java tab=\"FacadeDemo.java\" package facadePattern; public class FacadeDemo { 1 2 3 4 5 public static void main(String[] args) { HomeTheater theater = new HomeTheater(); theater.watchMovie(); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 ## Decorator Pattern *** ``` java tab=\"Beverage.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public abstract class Beverage { String description = \"Unknown Description\"; public String getDescription() { return description; } public abstract double cost(); } ``` java tab=\"CondimentDecorator.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public abstract class CondimentDecorator extends Beverage { 1 public abstract String getDescription(); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 ``` java tab=\"DarkRoast.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class DarkRoast extends Beverage { public DarkRoast() { description = this.getClass().getName() + \" Coffe\"; } @Override public double cost() { return 3.0; } } ``` java tab=\"Decaf.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class Decaf extends Beverage{ 1 2 3 4 5 6 7 8 9 public Decaf() { description = this.getClass().getName() + \" Coffe\"; } @Override public double cost() { return 4.0; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 ``` java tab=\"Espresso.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class Espresso extends Beverage{ public Espresso() { description = this.getClass().getName() + \" Coffe\"; } @Override public double cost() { return 6.0; } } ``` java tab=\"HouseBlend.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class HouseBlend extends Beverage { 1 2 3 4 5 6 7 8 9 public HouseBlend() { description = this.getClass().getName() + \" Coffe\"; } @Override public double cost() { return 2.0; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ``` java tab=\"Mocha.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class Mocha extends CondimentDecorator { Beverage bev; public Mocha(Beverage bev) { this.bev = bev; } @Override public String getDescription() { return bev.getDescription() + \" + \" + this.getClass().getName() ; } @Override public double cost() { return 0.2 + bev.cost() ; } } ``` java tab=\"Soy.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class Soy extends CondimentDecorator{ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 Beverage bev; public Soy(Beverage bev) { this.bev = bev; } @Override public String getDescription() { return bev.getDescription() + \" + \" + this.getClass().getName() ; } @Override public double cost() { return 0.4 + bev.cost() ; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 ``` java tab=\"Beverage.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public abstract class Beverage { String description = \"Unknown Description\"; public String getDescription() { return description; } public abstract double cost(); } ``` java tab=\"SteamedMilk.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class SteamedMilk extends CondimentDecorator { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 Beverage bev; public SteamedMilk(Beverage bev) { this.bev = bev; } @Override public String getDescription() { return bev.getDescription() + \" + \" + this.getClass().getName(); } @Override public double cost() { return 0.6 + bev.cost(); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ``` java tab=\"WhippedMilk.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class WhippedMilk extends CondimentDecorator{ Beverage bev; public WhippedMilk(Beverage bev) { this.bev = bev; } @Override public String getDescription() { return bev.getDescription() + \" + \" + this.getClass().getName(); } @Override public double cost() { return 0.9 + bev.cost(); } } ``` java tab=\"MainStarBuzz.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class MainStarBuzz { public static void main(String[] args) { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 HouseBlend obj = new HouseBlend(); Mocha moc = new Mocha(obj); System.out.println(obj.getDescription()); System.out.println(obj.cost()); System.out.println(moc.getDescription()); System.out.println(moc.cost()); Beverage coffe = new DarkRoast(); coffe = new Mocha(coffe); coffe = new Soy(coffe); System.out.println(coffe.getDescription()); System.out.println(coffe.cost()); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 ## Composite Pattern *** ``` java tab=\"Beverage.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 24, 2019 */ public abstract class Employee { // Composite Method Specifically public void add(Employee employee) { throw new UnsupportedOperationException(); } public void remove(Employee employee) { throw new UnsupportedOperationException(); } public Employee getChild(int i) { throw new UnsupportedOperationException(); } // Composite + leafItems Mehthods public int getId() { throw new UnsupportedOperationException(); } public String getName() { throw new UnsupportedOperationException(); } public double getSalary() { throw new UnsupportedOperationException(); } public void print() { throw new UnsupportedOperationException(); } } ``` java tab=\"BankManager.java\" import java.util.ArrayList; import java.util.Iterator; import java.util.List; /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 24, 2019 */ public class BankManager extends Employee { int id; String name; double salary; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 public BankManager(int id, String name, double salary) { this.id = id; this.name = name; this.salary = salary; } List<Employee> employeelist = new ArrayList<>(); @Override public void add(Employee employee) { employeelist.add(employee); } @Override public void remove(Employee employee) { employeelist.remove(employee); } @Override public Employee getChild(int i) { return employeelist.get(i); } @Override public int getId() { return this.id; } @Override public String getName() { return this.name; } @Override public double getSalary() { return this.salary; } @Override public void print() { System.out.println(\"======================================\"); System.out.println(\"Id = \" + getId()); System.out.println(\"Name = \" + getName()); System.out.println(\"Salaray = \" + getSalary()); System.out.println(\"======================================\"); Iterator<Employee> it = employeelist.iterator(); while(it.hasNext()){ Employee emp = (Employee) it.next(); emp.print(); } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 ``` java tab=\"Cashier.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 24, 2019 */ public class Cashier extends Employee { int id; String name; double salary; public Cashier(int id, String name, double salary) { this.id = id; this.name = name; this.salary = salary; } @Override public int getId() { return this.id; } @Override public String getName() { return this.name; } @Override public double getSalary() { return this.salary; } @Override public void print() { System.out.println(\"======================================\"); System.out.println(\"Id = \" + getId()); System.out.println(\"Name = \" + getName()); System.out.println(\"Salaray = \" + getSalary()); System.out.println(\"======================================\"); } } ``` java tab=\"Accountant.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 24, 2019 */ public class Accountant extends Employee { int id; String name; double salary; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 public Accountant(int id, String name, double salary) { this.id = id; this.name = name; this.salary = salary; } @Override public int getId() { return this.id; } @Override public String getName() { return this.name; } @Override public double getSalary() { return this.salary; } @Override public void print() { System.out.println(\"======================================\"); System.out.println(\"Id = \" + getId()); System.out.println(\"Name = \" + getName()); System.out.println(\"Salaray = \" + getSalary()); System.out.println(\"======================================\"); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ``` java tab=\"CompositePatternDemo.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 24, 2019 */ public class CompositePatternDemo { public static void main(String[] args) { Employee manager = new BankManager(101, \"BankManager\", 80000.00); Employee cash1 = new Cashier(202, \"Cashier1\", 20000.00); Employee cash2 = new Cashier(203, \"Cashier2\", 20000.00); Employee accountant = new Accountant(204, \"Accountant\", 42000.00); manager.add(cash1); manager.add(cash2); manager.add(accountant); manager.print(); } }","title":"Structural Pattern"},{"location":"designPattern/structural/structural-dp/#structural-pattern","text":"","title":"Structural Pattern"},{"location":"designPattern/structural/structural-dp/#flyweigt-pattern","text":"``` java tab=\"Shape.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Mar 28, 2019 */ public interface Shape { 1 public void draw(); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 ``` java tab=\"Circle.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Mar 28, 2019 */ public class Circle implements Shape { private String name = null; private int xcoor = 0; private int ycoor = 0; public Circle(String name) { super(); this.name = name; } public String getName() { return name; } public void setName(String name) { this.name = name; } public int getXcoor() { return xcoor; } public void setXcoor(int xcoor) { this.xcoor = xcoor; } public int getYcoor() { return ycoor; } public void setYCoor(int ycoor) { this.ycoor = ycoor; } public void draw() { System.out.println(\"Drawing a Circle having \" + this.name + \" Color at X: \" + this.xcoor + \" Y :\" + this.ycoor + \" Coordinates\"); } } ``` java tab=\"ShapeFactory.java\" import java.util.HashMap; /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Mar 28, 2019 */ public class ShapeFactory { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 private static final HashMap<String, Shape> shapeMap = new HashMap<>(); public static Shape getShape(String color) { Circle circle = (Circle) shapeMap.get(color); if (circle == null) { circle = new Circle(color); shapeMap.put(color, circle); System.out.println(\"Creating Circle of Color : \" + color); } return circle; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 ``` java tab=\"FlyweightPatternDemo.java\" import java.util.Random; /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Mar 28, 2019 */ public class FlyweightPatternDemo { public static final String color[] = { \"Red\", \"Green\", \"Blue\", \"White\", \"Black\" }; static Random rand = new Random(); public static void main(String[] args) { for (int i = 0; i < 20; i++) { Circle circle = (Circle) ShapeFactory.getShape(getColor()); circle.setXcoor(getRandX()); circle.setYCoor(getRandY()); circle.draw(); } } private static String getColor() { return color[rand.nextInt(color.length)]; } private static int getRandX() { return rand.nextInt(100); } private static int getRandY() { return rand.nextInt(100); } }","title":"Flyweigt Pattern"},{"location":"designPattern/structural/structural-dp/#flyweigt-pattern-example","text":"``` java tab=\"AlphabetGenerator.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Mar 29, 2019 */ package LabTask; import java.util.HashMap; public class AlphabetGenerator { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 private static final HashMap<Character, Character> charmap = new HashMap<>(); public static char getChar(char ch) { Character retch = charmap.get(ch); if (retch == null) { retch = ch; charmap.put(ch, ch); System.out.println(\"Char '\" + ch + \"' is added to the Hashmap\"); } else System.out.println(retch); return retch; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 ``` java tab=\"FlyweightDemo.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Mar 29, 2019 * Task Description: Consider a Word text editor where a user can type alphabet and takes one byte in momory . Implemet flyweight patter to use memory efficeiently for storage of characters. Alphabets are A,B,C,D,E */ package LabTask; import java.util.Random; public class FlyweightDemo { private static char alpha[] = { 'A', 'B', 'C', 'D', 'E' }; public static void main(String[] args) { for (int i = 0; i < 100; i++) AlphabetGenerator.getChar( getRandomAlpha() ); } private static char getRandomAlpha() { Random rand = new Random(); return alpha[rand.nextInt(5)]; } }","title":"Flyweigt Pattern Example"},{"location":"designPattern/structural/structural-dp/#facade-pattern","text":"``` java tab=\"HomeTheater.java\" package facadePattern; public class HomeTheater { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 private Amplifier amp; private DVDPlayer dvdPlayer; private Light light; private Popcorn popcorn; private Projecter projecter; public HomeTheater() { this.amp = new Amplifier(); this.dvdPlayer = new DVDPlayer(); this.light = new Light(); this.popcorn = new Popcorn(); this.projecter = new Projecter(); } public void watchMovie() { popcorn.load(); popcorn.on(); projecter.lower(); amp.on(); amp.medium(); amp.inputDVD(); dvdPlayer.on(); dvdPlayer.load(); dvdPlayer.sorround(); projecter.on(); projecter.inputDVD(); projecter.wideScreen(); light.dim(); dvdPlayer.start(); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ``` java tab=\"Amplifier.java\" package facadePattern; public class Amplifier { public void on() { // TODO Auto-generated method stub } public void inputDVD() { // TODO Auto-generated method stub } public void medium() { // TODO Auto-generated method stub } } ``` java tab=\"DVDPlayer.java\" package facadePattern; public class DVDPlayer { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 public void load() { // TODO Auto-generated method stub } public void sorround() { // TODO Auto-generated method stub } public void start() { // TODO Auto-generated method stub } public void on() { // TODO Auto-generated method stub } } 1 2 3 4 5 6 7 8 9 10 11 12 ``` java tab=\"Light.java\" package facadePattern; public class Light { public void dim() { // TODO Auto-generated method stub } } ``` java tab=\"Popcorn.java\" package facadePattern; public class Popcorn { 1 2 3 4 5 6 7 8 9 public void load() { System.out.println(\"Popcorn machine is loading.\"); } public void on() { System.out.println(\"\"); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ``` java tab=\"Projecter.java\" package facadePattern; public class Projecter { public void lower() { // TODO Auto-generated method stub } public void on() { // TODO Auto-generated method stub } public void load() { // TODO Auto-generated method stub } public void inputDVD() { // TODO Auto-generated method stub } public void wideScreen() { // TODO Auto-generated method stub } } ``` java tab=\"FacadeDemo.java\" package facadePattern; public class FacadeDemo { 1 2 3 4 5 public static void main(String[] args) { HomeTheater theater = new HomeTheater(); theater.watchMovie(); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 ## Decorator Pattern *** ``` java tab=\"Beverage.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public abstract class Beverage { String description = \"Unknown Description\"; public String getDescription() { return description; } public abstract double cost(); } ``` java tab=\"CondimentDecorator.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public abstract class CondimentDecorator extends Beverage { 1 public abstract String getDescription(); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 ``` java tab=\"DarkRoast.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class DarkRoast extends Beverage { public DarkRoast() { description = this.getClass().getName() + \" Coffe\"; } @Override public double cost() { return 3.0; } } ``` java tab=\"Decaf.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class Decaf extends Beverage{ 1 2 3 4 5 6 7 8 9 public Decaf() { description = this.getClass().getName() + \" Coffe\"; } @Override public double cost() { return 4.0; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 ``` java tab=\"Espresso.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class Espresso extends Beverage{ public Espresso() { description = this.getClass().getName() + \" Coffe\"; } @Override public double cost() { return 6.0; } } ``` java tab=\"HouseBlend.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class HouseBlend extends Beverage { 1 2 3 4 5 6 7 8 9 public HouseBlend() { description = this.getClass().getName() + \" Coffe\"; } @Override public double cost() { return 2.0; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ``` java tab=\"Mocha.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class Mocha extends CondimentDecorator { Beverage bev; public Mocha(Beverage bev) { this.bev = bev; } @Override public String getDescription() { return bev.getDescription() + \" + \" + this.getClass().getName() ; } @Override public double cost() { return 0.2 + bev.cost() ; } } ``` java tab=\"Soy.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class Soy extends CondimentDecorator{ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 Beverage bev; public Soy(Beverage bev) { this.bev = bev; } @Override public String getDescription() { return bev.getDescription() + \" + \" + this.getClass().getName() ; } @Override public double cost() { return 0.4 + bev.cost() ; } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 ``` java tab=\"Beverage.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public abstract class Beverage { String description = \"Unknown Description\"; public String getDescription() { return description; } public abstract double cost(); } ``` java tab=\"SteamedMilk.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class SteamedMilk extends CondimentDecorator { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 Beverage bev; public SteamedMilk(Beverage bev) { this.bev = bev; } @Override public String getDescription() { return bev.getDescription() + \" + \" + this.getClass().getName(); } @Override public double cost() { return 0.6 + bev.cost(); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 ``` java tab=\"WhippedMilk.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class WhippedMilk extends CondimentDecorator{ Beverage bev; public WhippedMilk(Beverage bev) { this.bev = bev; } @Override public String getDescription() { return bev.getDescription() + \" + \" + this.getClass().getName(); } @Override public double cost() { return 0.9 + bev.cost(); } } ``` java tab=\"MainStarBuzz.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 8, 2019 */ public class MainStarBuzz { public static void main(String[] args) { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 HouseBlend obj = new HouseBlend(); Mocha moc = new Mocha(obj); System.out.println(obj.getDescription()); System.out.println(obj.cost()); System.out.println(moc.getDescription()); System.out.println(moc.cost()); Beverage coffe = new DarkRoast(); coffe = new Mocha(coffe); coffe = new Soy(coffe); System.out.println(coffe.getDescription()); System.out.println(coffe.cost()); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 ## Composite Pattern *** ``` java tab=\"Beverage.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 24, 2019 */ public abstract class Employee { // Composite Method Specifically public void add(Employee employee) { throw new UnsupportedOperationException(); } public void remove(Employee employee) { throw new UnsupportedOperationException(); } public Employee getChild(int i) { throw new UnsupportedOperationException(); } // Composite + leafItems Mehthods public int getId() { throw new UnsupportedOperationException(); } public String getName() { throw new UnsupportedOperationException(); } public double getSalary() { throw new UnsupportedOperationException(); } public void print() { throw new UnsupportedOperationException(); } } ``` java tab=\"BankManager.java\" import java.util.ArrayList; import java.util.Iterator; import java.util.List; /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 24, 2019 */ public class BankManager extends Employee { int id; String name; double salary; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 public BankManager(int id, String name, double salary) { this.id = id; this.name = name; this.salary = salary; } List<Employee> employeelist = new ArrayList<>(); @Override public void add(Employee employee) { employeelist.add(employee); } @Override public void remove(Employee employee) { employeelist.remove(employee); } @Override public Employee getChild(int i) { return employeelist.get(i); } @Override public int getId() { return this.id; } @Override public String getName() { return this.name; } @Override public double getSalary() { return this.salary; } @Override public void print() { System.out.println(\"======================================\"); System.out.println(\"Id = \" + getId()); System.out.println(\"Name = \" + getName()); System.out.println(\"Salaray = \" + getSalary()); System.out.println(\"======================================\"); Iterator<Employee> it = employeelist.iterator(); while(it.hasNext()){ Employee emp = (Employee) it.next(); emp.print(); } } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 ``` java tab=\"Cashier.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 24, 2019 */ public class Cashier extends Employee { int id; String name; double salary; public Cashier(int id, String name, double salary) { this.id = id; this.name = name; this.salary = salary; } @Override public int getId() { return this.id; } @Override public String getName() { return this.name; } @Override public double getSalary() { return this.salary; } @Override public void print() { System.out.println(\"======================================\"); System.out.println(\"Id = \" + getId()); System.out.println(\"Name = \" + getName()); System.out.println(\"Salaray = \" + getSalary()); System.out.println(\"======================================\"); } } ``` java tab=\"Accountant.java\" /* * * @author : Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 24, 2019 */ public class Accountant extends Employee { int id; String name; double salary; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 public Accountant(int id, String name, double salary) { this.id = id; this.name = name; this.salary = salary; } @Override public int getId() { return this.id; } @Override public String getName() { return this.name; } @Override public double getSalary() { return this.salary; } @Override public void print() { System.out.println(\"======================================\"); System.out.println(\"Id = \" + getId()); System.out.println(\"Name = \" + getName()); System.out.println(\"Salaray = \" + getSalary()); System.out.println(\"======================================\"); } } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 ``` java tab=\"CompositePatternDemo.java\" /* * * @author: Muhammad Mohsin Mahmood * email: mohsinmahmoodmdl@gmail.com * Registration#: SP16-BSE-060 * Date: Apr 24, 2019 */ public class CompositePatternDemo { public static void main(String[] args) { Employee manager = new BankManager(101, \"BankManager\", 80000.00); Employee cash1 = new Cashier(202, \"Cashier1\", 20000.00); Employee cash2 = new Cashier(203, \"Cashier2\", 20000.00); Employee accountant = new Accountant(204, \"Accountant\", 42000.00); manager.add(cash1); manager.add(cash2); manager.add(accountant); manager.print(); } }","title":"Facade Pattern"},{"location":"flask-doc/Flask%20Guide%20101/","text":"Flask Guide 101 Heroku setup heroku toolbelt Creating Environment \u00b6 Conda Environment \u00b6 1 2 conda create --name flask activate flask Virtualenv Environment \u00b6 Installing pip \u00b6 easy_install pip Installing Virtualenv \u00b6 pip install virtualenv Creating virtualenv \u00b6 virtualenv venv Activating virtualenv \u00b6 venv\\Scripts\\activate Installing Flask \u00b6 1 pip install flask Sample App Flask \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # Basic flask application # hello.py from flask import Flask app = Flask ( __name__ ) @app . route ( '/' ) def index (): return '<h1>Learning Flask</h1>' @app . route ( '/user/<name>' ) def user ( name ): return 'Hello, %s ' % format ( name ) Running Server \u00b6 For Windows 1 2 set Flask_App=hello.py flask run For Linux 1 2 export Flask_App=hello.py flask run or for production flask run --host 0.0.0.0 --port 5200 Flask Commandline \u00b6 1 2 3 4 5 6 7 8 9 10 # filename: cli.py import click from flask import Flask app = Flask ( __name__ ) @app . cli . command () def sayhi (): \"\"\"Say Hello.\"\"\" click . echo ( 'Hello' ) 1 2 set Flask_App=cli.py run sayhi Response Template \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 # filename: food.py from flask import Flask from flask import request app = Flask ( __name__ ) from flask import render_template @app . route ( '/dinner/' ) @app . route ( '/dinner/<food>' ) def eat ( food = None ): return render_template ( 'food.html' , food = food ) 1 2 3 4 5 6 7 8 9 10 11 <!\u2013\u2013 filename: food.html --> <!\u2013\u2013 Location: base_dir\\templates\\food.html --> <!doctype html> < title > What's for dinner? </ title > {% if food %} < h1 > I want {{ food }}! </ h1 > {% else %} < h1 > Anything is fine! </ h1 > {% endif %} Integrating Bootstrap \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # filename: food.py # Location: base_dir\\food.py # Location: base_dir\\templates\\food.html from flask import Flask from flask import request from flask_bootstrap import Bootstrap app = Flask ( __name__ ) Bootstrap ( app ) from flask import render_template @app . route ( '/dinner/' ) @app . route ( '/dinner/<food>' ) def eat ( food = None ): return render_template ( 'food.html' , food = food , list = [ \"pizza\" , \"sushi\" , \"quinoa\" ]) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 <!-- filename: food.html --> <!-- Location: base_dir\\templates\\food.html --> {% extends \"bootstrap/base.html\" %} {% block title %}What's for dinner?{% endblock %} {% block content %} < div class = \"container\" > {% if food %} < div class = \"alert alert-success\" > < h1 > I want {{ food }}! </ h1 > {% else %} < div class = \"alert alert-info\" > < h1 > Anything is fine! </ h1 > {% endif %} </ div > {% if list %} < p > Now we'll loop through the list </ p > < ul > {% for n in list %} < li >< a href = \"/dinner/{{n}}\" > {{n}} </ li > {% endfor %} </ ul > {% endif %} </ div > {% endblock %} Create Web Forms \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 # filename: food.py # Location: base_dir\\hello.py # Location: base_dir\\templates\\hello.html from flask import Flask , render_template , flash , request from wtforms import Form , TextField , TextAreaField , StringField , SubmitField from flask_bootstrap import Bootstrap # App config. DEBUG = True app = Flask ( __name__ ) Bootstrap ( app ) app . config . from_object ( __name__ ) app . config [ 'SECRET_KEY' ] = 'SuperSecretKey' class NameForm ( Form ): name = TextField ( 'Name:' ) @app . route ( \"/\" , methods = [ 'GET' , 'POST' ]) def hello (): form = NameForm ( request . form ) print ( form . errors ) if request . method == 'POST' : name = request . form [ 'name' ] print ( name ) flash ( 'Hello ' + name ) return render_template ( 'hello.html' , form = form ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <!-- filename: food.html --> <!-- Location: base_dir\\templates\\food.html --> {% extends \"bootstrap/base.html\" %} {% block title %} Form Demo {% endblock %} {% block content %} < div class = \"container\" > < h1 > Form Demo </ h1 > {% with messages = get_flashed_messages(with_categories=true) %} {% if messages %} < ul > {% for message in messages %} < li > {{ message[0] }} </ li > {% endfor %} </ ul > {% endif %} {% endwith %} < form action = \"\" method = \"post\" > < div class = \"form-group\" > {{ form.name.label }} {{ form.name(class=\"form-control\",placeholder=\"What's your name?\") }} </ div > < div class = \"input submit\" > < button type = \"submit\" class = \"btn btn-success\" > Submit </ button > </ div > </ form > </ div > {% endblock %} CGPA Prediction System \u00b6 ``` python tab=\"cgpaPrediction.py\" filename: cgpaPrediction.py \u00b6 Location: base_dir\\cgpaPrediction.py \u00b6 Location: base_dir\\templates\\index.html \u00b6 from flask import Flask, render_template, flash, request from wtforms import Form, TextField, TextAreaField, StringField, SubmitField from flask_bootstrap import Bootstrap import GPA_Prediction_Using_Two_File_Dataset App config. \u00b6 DEBUG = True app = Flask( name ) Bootstrap(app) app.config.from_object( name ) app.config['SECRET_KEY'] = 'SuperSecretKey' class NameForm(Form): sat_score = TextField('SAT Score:') @app .route(\"/\", methods=['GET', 'POST']) def cgpaPrediction(): form = NameForm(request.form) 1 2 3 4 5 6 7 if request.method == 'POST': sat_score = request.form['sat_score'] sat_score = GPA_Prediction_Using_Two_File_Dataset.prediction(float(sat_score)) flash('CGPA = ' + str(sat_score) ) return render_template('index.html', form=form) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 ``` html tab=\"index.html\" <!-- filename: index.html --> <!-- Location: base_dir\\templates\\index.html --> {% extends \"bootstrap/base.html\" %} {% block title %} CGPA Prediction {% endblock %} {% block content %} <div class=\"container\"> <h1>CGPA Prediction</h1> <form action=\"\" method=\"post\"> <div class=\"form-group\"> {{ form.sat_score.label }} {{ form.sat_score(class=\"form-control\",placeholder=\"What's your SAT Score?\") }} </div> <div class=\"input submit\"> <button type=\"submit\" class=\"btn btn-success\">Submit</button> </div> </form> {% with messages = get_flashed_messages(with_categories=true) %} {% if messages %} <br> {% for message in messages %} <div class=\"alert alert-info\" role=\"alert\">{{ message[1] }}</div> {% endfor %} {% endif %} {% endwith %} </div> {% endblock %","title":"Flask Guide 101"},{"location":"flask-doc/Flask%20Guide%20101/#creating-environment","text":"","title":"Creating Environment"},{"location":"flask-doc/Flask%20Guide%20101/#conda-environment","text":"1 2 conda create --name flask activate flask","title":"Conda Environment"},{"location":"flask-doc/Flask%20Guide%20101/#virtualenv-environment","text":"","title":"Virtualenv Environment"},{"location":"flask-doc/Flask%20Guide%20101/#installing-pip","text":"easy_install pip","title":"Installing pip"},{"location":"flask-doc/Flask%20Guide%20101/#installing-virtualenv","text":"pip install virtualenv","title":"Installing Virtualenv"},{"location":"flask-doc/Flask%20Guide%20101/#creating-virtualenv","text":"virtualenv venv","title":"Creating virtualenv"},{"location":"flask-doc/Flask%20Guide%20101/#activating-virtualenv","text":"venv\\Scripts\\activate","title":"Activating virtualenv"},{"location":"flask-doc/Flask%20Guide%20101/#installing-flask","text":"1 pip install flask","title":"Installing Flask"},{"location":"flask-doc/Flask%20Guide%20101/#sample-app-flask","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # Basic flask application # hello.py from flask import Flask app = Flask ( __name__ ) @app . route ( '/' ) def index (): return '<h1>Learning Flask</h1>' @app . route ( '/user/<name>' ) def user ( name ): return 'Hello, %s ' % format ( name )","title":"Sample App Flask"},{"location":"flask-doc/Flask%20Guide%20101/#running-server","text":"For Windows 1 2 set Flask_App=hello.py flask run For Linux 1 2 export Flask_App=hello.py flask run or for production flask run --host 0.0.0.0 --port 5200","title":"Running Server"},{"location":"flask-doc/Flask%20Guide%20101/#flask-commandline","text":"1 2 3 4 5 6 7 8 9 10 # filename: cli.py import click from flask import Flask app = Flask ( __name__ ) @app . cli . command () def sayhi (): \"\"\"Say Hello.\"\"\" click . echo ( 'Hello' ) 1 2 set Flask_App=cli.py run sayhi","title":"Flask Commandline"},{"location":"flask-doc/Flask%20Guide%20101/#response-template","text":"1 2 3 4 5 6 7 8 9 10 11 12 # filename: food.py from flask import Flask from flask import request app = Flask ( __name__ ) from flask import render_template @app . route ( '/dinner/' ) @app . route ( '/dinner/<food>' ) def eat ( food = None ): return render_template ( 'food.html' , food = food ) 1 2 3 4 5 6 7 8 9 10 11 <!\u2013\u2013 filename: food.html --> <!\u2013\u2013 Location: base_dir\\templates\\food.html --> <!doctype html> < title > What's for dinner? </ title > {% if food %} < h1 > I want {{ food }}! </ h1 > {% else %} < h1 > Anything is fine! </ h1 > {% endif %}","title":"Response Template"},{"location":"flask-doc/Flask%20Guide%20101/#integrating-bootstrap","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # filename: food.py # Location: base_dir\\food.py # Location: base_dir\\templates\\food.html from flask import Flask from flask import request from flask_bootstrap import Bootstrap app = Flask ( __name__ ) Bootstrap ( app ) from flask import render_template @app . route ( '/dinner/' ) @app . route ( '/dinner/<food>' ) def eat ( food = None ): return render_template ( 'food.html' , food = food , list = [ \"pizza\" , \"sushi\" , \"quinoa\" ]) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 <!-- filename: food.html --> <!-- Location: base_dir\\templates\\food.html --> {% extends \"bootstrap/base.html\" %} {% block title %}What's for dinner?{% endblock %} {% block content %} < div class = \"container\" > {% if food %} < div class = \"alert alert-success\" > < h1 > I want {{ food }}! </ h1 > {% else %} < div class = \"alert alert-info\" > < h1 > Anything is fine! </ h1 > {% endif %} </ div > {% if list %} < p > Now we'll loop through the list </ p > < ul > {% for n in list %} < li >< a href = \"/dinner/{{n}}\" > {{n}} </ li > {% endfor %} </ ul > {% endif %} </ div > {% endblock %}","title":"Integrating Bootstrap"},{"location":"flask-doc/Flask%20Guide%20101/#create-web-forms","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 # filename: food.py # Location: base_dir\\hello.py # Location: base_dir\\templates\\hello.html from flask import Flask , render_template , flash , request from wtforms import Form , TextField , TextAreaField , StringField , SubmitField from flask_bootstrap import Bootstrap # App config. DEBUG = True app = Flask ( __name__ ) Bootstrap ( app ) app . config . from_object ( __name__ ) app . config [ 'SECRET_KEY' ] = 'SuperSecretKey' class NameForm ( Form ): name = TextField ( 'Name:' ) @app . route ( \"/\" , methods = [ 'GET' , 'POST' ]) def hello (): form = NameForm ( request . form ) print ( form . errors ) if request . method == 'POST' : name = request . form [ 'name' ] print ( name ) flash ( 'Hello ' + name ) return render_template ( 'hello.html' , form = form ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <!-- filename: food.html --> <!-- Location: base_dir\\templates\\food.html --> {% extends \"bootstrap/base.html\" %} {% block title %} Form Demo {% endblock %} {% block content %} < div class = \"container\" > < h1 > Form Demo </ h1 > {% with messages = get_flashed_messages(with_categories=true) %} {% if messages %} < ul > {% for message in messages %} < li > {{ message[0] }} </ li > {% endfor %} </ ul > {% endif %} {% endwith %} < form action = \"\" method = \"post\" > < div class = \"form-group\" > {{ form.name.label }} {{ form.name(class=\"form-control\",placeholder=\"What's your name?\") }} </ div > < div class = \"input submit\" > < button type = \"submit\" class = \"btn btn-success\" > Submit </ button > </ div > </ form > </ div > {% endblock %}","title":"Create Web Forms"},{"location":"flask-doc/Flask%20Guide%20101/#cgpa-prediction-system","text":"``` python tab=\"cgpaPrediction.py\"","title":"CGPA Prediction System"},{"location":"flask-doc/Flask%20Guide%20101/#filename-cgpapredictionpy","text":"","title":"filename: cgpaPrediction.py"},{"location":"flask-doc/Flask%20Guide%20101/#location-base_dircgpapredictionpy","text":"","title":"Location: base_dir\\cgpaPrediction.py"},{"location":"flask-doc/Flask%20Guide%20101/#location-base_dirtemplatesindexhtml","text":"from flask import Flask, render_template, flash, request from wtforms import Form, TextField, TextAreaField, StringField, SubmitField from flask_bootstrap import Bootstrap import GPA_Prediction_Using_Two_File_Dataset","title":"Location: base_dir\\templates\\index.html"},{"location":"flask-doc/Flask%20Guide%20101/#app-config","text":"DEBUG = True app = Flask( name ) Bootstrap(app) app.config.from_object( name ) app.config['SECRET_KEY'] = 'SuperSecretKey' class NameForm(Form): sat_score = TextField('SAT Score:') @app .route(\"/\", methods=['GET', 'POST']) def cgpaPrediction(): form = NameForm(request.form) 1 2 3 4 5 6 7 if request.method == 'POST': sat_score = request.form['sat_score'] sat_score = GPA_Prediction_Using_Two_File_Dataset.prediction(float(sat_score)) flash('CGPA = ' + str(sat_score) ) return render_template('index.html', form=form) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 ``` html tab=\"index.html\" <!-- filename: index.html --> <!-- Location: base_dir\\templates\\index.html --> {% extends \"bootstrap/base.html\" %} {% block title %} CGPA Prediction {% endblock %} {% block content %} <div class=\"container\"> <h1>CGPA Prediction</h1> <form action=\"\" method=\"post\"> <div class=\"form-group\"> {{ form.sat_score.label }} {{ form.sat_score(class=\"form-control\",placeholder=\"What's your SAT Score?\") }} </div> <div class=\"input submit\"> <button type=\"submit\" class=\"btn btn-success\">Submit</button> </div> </form> {% with messages = get_flashed_messages(with_categories=true) %} {% if messages %} <br> {% for message in messages %} <div class=\"alert alert-info\" role=\"alert\">{{ message[1] }}</div> {% endfor %} {% endif %} {% endwith %} </div> {% endblock %","title":"App config."},{"location":"linux101/linux-guide/","text":"Netlify Test \u00b6 Create file in linux \u00b6 1 cat > docs/linux101/linux-guide.md Create file and directory in linux \u00b6 1 mkdir docs/linux101/ && cat > docs/linux101/linux-guide.md Copy linux files \u00b6 1 cp -Rv ../simpledoc/docs/ ./ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 You can do this using -T option in cp. See Man page for cp. -T, --no-target-directory treat DEST as a normal file So as per your example, following is the file structure. $ tree test test |-- bar | |-- a | `-- b `-- foo |-- a `-- b 2 directories, 4 files You can see the clear difference when you use -v for Verbose. When you use just -R option. $ cp -Rv foo/ bar/ `foo/' -> `bar/foo' `foo/b' -> `bar/foo/b' `foo/a' -> `bar/foo/a' $ tree |-- bar | |-- a | |-- b | `-- foo | |-- a | `-- b `-- foo |-- a `-- b 3 directories, 6 files When you use the option -T it overwrites the contents, treating the destination like a normal file and not directory. $ cp -TRv foo/ bar/ `foo/b' -> `bar/b' `foo/a' -> `bar/a' $ tree |-- bar | |-- a | `-- b `-- foo |-- a `-- b 2 directories, 4 files This should solve your problem.","title":"Linux Guide 101"},{"location":"linux101/linux-guide/#netlify-test","text":"","title":"Netlify Test"},{"location":"linux101/linux-guide/#create-file-in-linux","text":"1 cat > docs/linux101/linux-guide.md","title":"Create file in linux"},{"location":"linux101/linux-guide/#create-file-and-directory-in-linux","text":"1 mkdir docs/linux101/ && cat > docs/linux101/linux-guide.md","title":"Create file and directory in linux"},{"location":"linux101/linux-guide/#copy-linux-files","text":"1 cp -Rv ../simpledoc/docs/ ./ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 You can do this using -T option in cp. See Man page for cp. -T, --no-target-directory treat DEST as a normal file So as per your example, following is the file structure. $ tree test test |-- bar | |-- a | `-- b `-- foo |-- a `-- b 2 directories, 4 files You can see the clear difference when you use -v for Verbose. When you use just -R option. $ cp -Rv foo/ bar/ `foo/' -> `bar/foo' `foo/b' -> `bar/foo/b' `foo/a' -> `bar/foo/a' $ tree |-- bar | |-- a | |-- b | `-- foo | |-- a | `-- b `-- foo |-- a `-- b 3 directories, 6 files When you use the option -T it overwrites the contents, treating the destination like a normal file and not directory. $ cp -TRv foo/ bar/ `foo/b' -> `bar/b' `foo/a' -> `bar/a' $ tree |-- bar | |-- a | `-- b `-- foo |-- a `-- b 2 directories, 4 files This should solve your problem.","title":"Copy linux files"}]}